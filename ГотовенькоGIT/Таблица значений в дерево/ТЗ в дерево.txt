#Область Формирования_и_оформления_итогов_по_семестрам

&НаКлиенте
Процедура СтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если ТекущаяСтраница.Имя = "ГруппаИтогиПоСеместрам" Тогда
		ПолучитьИтогиНаСервере(Объект.Ссылка);
	КонецЕсли;
	//Элементы.ИтогиПоСеместрам.Отображение = ОтображениеТаблицы.ИерархическийСписок;
	КоллекцияЭлементовДерева = ИтогиПоСеместрам.ПолучитьЭлементы();
	Для Каждого Строка Из КоллекцияЭлементовДерева Цикл    
		ИдентификаторСтроки = Строка.ПолучитьИдентификатор();
		Элементы.ИтогиПоСеместрам.Развернуть(ИдентификаторСтроки);
	КонецЦикла;	
КонецПроцедуры
	

&НаСервере
Процедура ПолучитьИтогиНаСервере(Ссылка)
	ТЗ = Объект.Дисциплины.Выгрузить(,"Всего, ВсегоЧасов, Дисциплина, Зачет, КонтрРаб, КурсПроект, КурсРаб, ЛБ, ЛБУстанСессия, 
									   |Лекции, ЛекцииУстанСессия, ПЗ, ПЗУстанСессия, РасР, Сем, ТипР, Экз");	
	Дерево = ТаблицаЗначенийВДвухуровневоеДерево(ТЗ, "Сем", Истина);
	
	// Переименовываем колонки Дерева для соответствия с ТЧ "ИтогиПоСеместрам"
	Дерево.Колонки.Сем.Имя = "Семестр";
	Дерево.Колонки.ЛекцииУстанСессия.Имя = "ЛкУст";
	Дерево.Колонки.ЛБУстанСессия.Имя = "ЛБУст";
	Дерево.Колонки.ПЗУстанСессия.Имя = "ПЗУст";
	Дерево.Колонки.Лекции.Имя = "ЛК";
	Дерево.Колонки.Всего.Имя = "ВсегоАуд";
	Дерево.Колонки.КурсПроект.Имя = "КП";
	Дерево.Колонки.КурсРаб.Имя = "КР";
	Дерево.Колонки.ТипР.Имя = "ТР";
	Дерево.Колонки.РасР.Имя = "РР";
	Дерево.Колонки.Экз.Имя = "Экзамен";
	
	// Подсчет итогов в отдельную строку дерева
	Итог = Дерево.Строки.Вставить(0);
	Для Инд = 1 По Дерево.Строки.Количество() - 1 Цикл
		Индекс = 0;
		Для Каждого Элемент Из Дерево.Строки[Инд] Цикл
			Если ТипЗнч(Элемент) = Тип("Число") Тогда
				Итог[Индекс] = Итог[Индекс] + Элемент;
			КонецЕсли;
			Индекс = Индекс + 1;
		КонецЦикла;
	КонецЦикла;
	ЗначениеВРеквизитФормы(Дерево, "ИтогиПоСеместрам");
	
	// Условное оформление по полю "Итоги" сверху
	// Добавляем элемент
	Элемент = УсловноеОформление.Элементы.Добавить();
	// Определяем условия сравнения для Правой части и цвета оформления	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.СветлоЖелтыйЗолотистый);
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.Коричневый);
	Элемент.Оформление.УстановитьЗначениеПараметра("Шрифт", Новый Шрифт(,, Истина));
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	// Здесь задаем по какому полю будем делать отбор
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ИтогиПоСеместрам.Семестр");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	// Определяем поля оформления через реквизит формы
	Для Каждого Колонка из Дерево.Колонки Цикл
		ПолеОформления = "ИтогиПоСеместрам" + Колонка.Имя;  
		ОформляемыеПоля = Элемент.Поля.Элементы.Добавить();
		ОформляемыеПоля.Поле = Новый ПолеКомпоновкиДанных(ПолеОформления);
	КонецЦикла;
КонецПроцедуры

&НаСервере
// Функция конвертирует ТаблицуЗначений в Дерево. Дерево получается 2-х уровневое, тк объединение идёт по одному полю группировки 
//
// Параметры:
//  ТЗ - ТаблицаЗначений - Исходная таблица, котрая будет преобразована в Дерево.
//  ПолеГруппировки - Строка - Наименование колонки ТЗ, по которой будет происходить объединение
//  ПодсчетИтогов - Булево - Указывает, нужно ли в узлах Родителей подсчитывать сумму значений узлов Потомков.
//							 Иными словами, это Итог для подчиненных элементов.
//							 Подсчет ведется только по элементам типа Число.
Функция ТаблицаЗначенийВДвухуровневоеДерево(ТЗ, ПолеГруппировки, ПодсчетИтогов = Ложь) Экспорт	
    Дерево = Новый ДеревоЗначений;	
    Для Каждого Колонка Из ТЗ.Колонки Цикл
        Дерево.Колонки.Добавить(Колонка.Имя, Колонка.ТипЗначения);
    КонецЦикла;
	Для Каждого СтрокаТаблицы Из ТЗ Цикл
        СтрокаГруппировки = Дерево.Строки.Найти(СтрокаТаблицы[ПолеГруппировки], ПолеГруппировки, Истина);
		Если СтрокаГруппировки = Неопределено Тогда
			СтрокаГруппировки = Дерево.Строки.Добавить();
			СтрокаГруппировки[ПолеГруппировки] = СтрокаТаблицы[ПолеГруппировки];
		КонецЕсли;
		НоваяСтрока = СтрокаГруппировки.Строки.Добавить();
        ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
		Если ПодсчетИтогов Тогда
			Индекс = 0;
			Для Каждого Элемент Из СтрокаТаблицы Цикл
				Если ТипЗнч(Элемент) = Тип("Число") Тогда
					НоваяСтрока.Родитель[Индекс] = НоваяСтрока.Родитель[Индекс] + Элемент; 		
				КонецЕсли;
				Индекс = Индекс + 1;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
    Возврат Дерево;
КонецФункции

&НаКлиенте
Процедура РасчетИтоговПоСеместру(Команда)
	РасчетИтоговПоСеместруНаСервере();
КонецПроцедуры

&НаСервере
Процедура РасчетИтоговПоСеместруНаСервере()
	Если Элементы.ДисциплиныСбросСеместров.Заголовок = "«семестры»" Тогда
		Возврат;
	КонецЕсли;
	Сем = Справочники.Семестры.НайтиПоНаименованию(СтрЗаменить(Элементы.ДисциплиныСбросСеместров.Заголовок, "сем.", ""));
	Отбор = Новый Структура;
	Отбор.Вставить("Сем", Сем);
	СтрокаИтогов = Объект.Дисциплины.Выгрузить(Отбор);
	СтрокаИтогов.Свернуть("Сем,ЧислоНедель", "Всего ,ВсегоЧасов, ЗачЕдиницы, КурсРаб, КурсПроект, КонтрРаб, ТипР, РасР, Зачет, Экз");
	ИтогСеместр = СтрокаИтогов[0].Сем.СеместрПрописью;
	ИтогАудЧасов = Формат(СтрокаИтогов[0].Всего / СтрокаИтогов[0].ЧислоНедель, "ЧЦ=8; ЧДЦ=1");
	ИтогЗачЕд = СтрокаИтогов[0].ЗачЕдиницы;
	ИтогКонтрРаб = СтрокаИтогов[0].КонтрРаб;
	ИтогКР = СтрокаИтогов[0].КурсРаб;
	ИтогКП = СтрокаИтогов[0].КурсПроект;
	ИтогРР = СтрокаИтогов[0].РасР;
	ИтогТР = СтрокаИтогов[0].ТипР;
	ИтогЗачет = СтрокаИтогов[0].Зачет;
	ИтогЭкз = СтрокаИтогов[0].Экз;
КонецПроцедуры

#КонецОбласти
