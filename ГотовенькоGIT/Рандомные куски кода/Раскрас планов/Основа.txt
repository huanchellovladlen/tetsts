&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ОпределитьВидимостьРеквизитовШапки();
	ОпределитьВидимостьТЧДисциплины();
	Элементы.Найти("ГруппаГоризонталь1").Видимость = Ложь;
	Элементы.Найти("Практики").Видимость = Ложь;
	Элементы.Найти("ГОП").Видимость = Ложь;
	Элементы.Найти("ДПГЭК").Видимость = Ложь;
	Элементы.Найти("УчетнНомераПС").Видимость = Ложь;
	Элементы.Найти("ИтогиСеместры").Видимость = Ложь;
	Элементы.Найти("Компетенции").Видимость = Ложь;
	Элементы.Найти("КомментарииНаФорме").Видимость = Ложь;
	ПолучитьЗаголовки();
	// -----------------создается проект из обработки "УчетИХранениеФайловУтвержденныхПС"----------------------
	Если Параметры.Свойство("СозданиеИзОбработки") Тогда
		Объект.РегистрационныйНомерПлана = Параметры.РегистрационныйНомерПлана
	КонецЕсли;
 
	// Переписываем элементы для создания на основании
	Если Параметры.Свойство("ВидимостьРеквизитов") Тогда
		Элементы.Найти("ГруппаГоризонталь1").Видимость = Истина;
		Элементы.Найти("ДисциплиныСоздатьНаОсновании").Видимость = Ложь; 
		Элементы.Найти("ФормаПоказатьРеквизиты").Заголовок = "Скрыть реквизиты"; 
		УчНомерПроектаПлана = Параметры.Ссылка;
	Иначе 
		Элементы.Найти("ДисциплиныЗагрузитьДанные").Видимость = Ложь;
	КонецЕсли;
	
	// Добавляем раскраску ячеек
	Если Объект.ФормаОбучения = Перечисления.ФормаОбучения.ЗаочнаяФО Тогда
		ДобавлениеРеквизитовВТабЧастьЗаочнаяФО();
		ПометитьЯчейкиЗаочнаяФО();
		РаскрасЯчеекЗаочнаяФО();
	КонецЕсли;
	Если Объект.ФормаОбучения = Перечисления.ФормаОбучения.ДневнаяФО Тогда
		ДобавлениеРеквизитовВТабЧастьДневнаяФО();
		ПометитьЯчейкиДневнаяФО();
		РаскрасЯчеекДневнаяФО();
	КонецЕсли;
	
	// Скрываем видимость для группы компетенций модулей
	Элементы.Найти("КомпетенцииМодулей").Видимость = Ложь;

	// Добавляем раскраску дисциплин
	ДобавлениеРеквизитаВДисциплины();
	ПометитьДисциплиныДляОкраса();
	РаскрасДисциплин();
	// Добавляем раскраску компетенций
	ДобавлениеРеквизитовВКомпетенции();
	РаскрасКомпетенций();
 КонецПроцедуры
 
&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Строки = Объект.Дисциплины;
	ПометитьДисциплиныДляОкраса();
	ПометитьКомпетенцииДляОкраса();
	Если Строка(Объект.ФормаОбучения) = "Дневная ФО" Тогда	
		Для Каждого Стр Из Строки Цикл
			Стр.ДляАудиторныхЧасов = "" + Стр.АудиторныхЧасов - (Стр.Лекции + Стр.Практические + Стр.Лабораторные + Стр.Семинарские);
		КонецЦикла;
	ИначеЕсли Строка(Объект.ФормаОбучения) = "Заочная ФО" Тогда
		Для Каждого Стр Из Строки Цикл
			Стр.АнализЛекций = "" + Стр.ЛекционныеЗанятия - (Стр.Лекции + Стр.ЛКУст);
			Стр.АнализПрактик = "" + Стр.ПрактическиеСеминарские - (Стр.Практические + Стр.ПЗСЗУст);
			Стр.АнализЛабораторных = "" + Стр.ЛабораторныеЗанятия - (Стр.Лабораторные + Стр.ЛБУст);	
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаСервере  
Процедура ДобавлениеРеквизитаВДисциплины()
	МассивРеквизитов = Новый Массив;
	МассивРеквизитов.Добавить(Новый РеквизитФормы("ДляДисциплины", Новый ОписаниеТипов("Булево"), "Объект.Дисциплины", "ДляДисциплины", Ложь));
	ИзменитьРеквизиты(МассивРеквизитов);
	Эл = Элементы.Добавить("ДопКолонкаДляДисциплины", Тип("ПолеФормы"), Элементы.Дисциплины);
	Эл.Вид = ВидПоляФормы.ПолеФлажка;
	Эл.Видимость = Ложь;
	Эл.ПутьКДанным = "Объект.Дисциплины.ДляДисциплины";
КонецПроцедуры

&НаСервере  
Процедура ДобавлениеРеквизитовВТабЧастьДневнаяФО()
	//----------------------------------------------- Для Аудиторных часов ----------------------------------------
	МассивРеквизитов = Новый Массив;
	МассивРеквизитов.Добавить(Новый РеквизитФормы("ДляАудиторныхЧасов", Новый ОписаниеТипов("Строка"), "Объект.Дисциплины", "ДляАудиторныхЧасов", Ложь));
	ИзменитьРеквизиты(МассивРеквизитов);	
	Эл = Элементы.Добавить("ДопКолонкаДляАудиторныхЧасов", Тип("ПолеФормы"), Элементы.Дисциплины);
	Эл.Вид = ВидПоляФормы.ПолеВвода;
	Эл.Видимость = Ложь;
	Эл.ПутьКДанным = "Объект.Дисциплины.ДляАудиторныхЧасов";
КонецПроцедуры

&НаСервере  
Процедура ДобавлениеРеквизитовВТабЧастьЗаочнаяФО()
	//-----------------------------------------------ЛК----------------------------------------
	МассивРеквизитов = Новый Массив;
	МассивРеквизитов.Добавить(Новый РеквизитФормы("АнализЛекций", Новый ОписаниеТипов("Строка"), "Объект.Дисциплины", "АнализЛекций", Ложь));
	ИзменитьРеквизиты(МассивРеквизитов);
	Эл = Элементы.Добавить("ДопКолонкаЛК", Тип("ПолеФормы"), Элементы.Дисциплины);
	Эл.Вид = ВидПоляФормы.ПолеВвода;
	Эл.Видимость = Ложь;
	Эл.ПутьКДанным = "Объект.Дисциплины.АнализЛекций";
	
	//-----------------------------------------------ПЗ----------------------------------------
	МассивРеквизитов = Новый Массив;
	МассивРеквизитов.Добавить(Новый РеквизитФормы("АнализПрактик", Новый ОписаниеТипов("Строка"), "Объект.Дисциплины", "АнализПрактик", Ложь));
	ИзменитьРеквизиты(МассивРеквизитов);
	Эл = Элементы.Добавить("ДопКолонкаПЗ", Тип("ПолеФормы"), Элементы.Дисциплины);
	Эл.Вид = ВидПоляФормы.ПолеВвода;
	Эл.Видимость = Ложь;
	Эл.ПутьКДанным = "Объект.Дисциплины.АнализПрактик";
	
	//-----------------------------------------------ЛБ----------------------------------------
	МассивРеквизитов = Новый Массив;
	МассивРеквизитов.Добавить(Новый РеквизитФормы("АнализЛабораторных", Новый ОписаниеТипов("Строка"), "Объект.Дисциплины", "АнализЛабораторных", Ложь));
	ИзменитьРеквизиты(МассивРеквизитов);
	Эл = Элементы.Добавить("ДопКолонкаЛБ", Тип("ПолеФормы"), Элементы.Дисциплины);
	Эл.Вид = ВидПоляФормы.ПолеВвода;
	Эл.Видимость = Ложь;
	Эл.ПутьКДанным = "Объект.Дисциплины.АнализЛабораторных"; 
КонецПроцедуры

&НаСервере  
Процедура ДобавлениеРеквизитовВКомпетенции()
	МассивРеквизитов = Новый Массив;
	МассивРеквизитов.Добавить(Новый РеквизитФормы("ДляРаскраски", Новый ОписаниеТипов("Булево"), "Объект.КомпетенцииПлана", "ДляРаскраски", Ложь));
	ИзменитьРеквизиты(МассивРеквизитов);	
	Эл = Элементы.Добавить("ДопКолонкаДляРаскраски", Тип("ПолеФормы"), Элементы.КомпетенцииПлана);
	Эл.Вид = ВидПоляФормы.ПолеФлажка;
	Эл.Видимость = Ложь;
	Эл.ПутьКДанным = "Объект.КомпетенцииПлана.ДляРаскраски";
КонецПроцедуры

#Область Изменения_цвета_ячеек_по_условию

// Дисциплины
&НаСервере  
Функция ПроверитьДисциплинуНаНаличие(ФормаОбучения, Дисциплина)	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ПроектыУПДисциплины.Дисциплина
		|ИЗ
		|	Документ.ПроектыУП.Дисциплины КАК ПроектыУПДисциплины
		|ГДЕ
		|	НЕ ПроектыУПДисциплины.Ссылка.Ссылка В (&Ссылка)
		|	И ПроектыУПДисциплины.Ссылка.ФормаОбучения = &ФормаОбучения
		|	И ПроектыУПДисциплины.Дисциплина.Наименование = &Дисциплина";
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.УстановитьПараметр("ФормаОбучения", ФормаОбучения);
	Запрос.УстановитьПараметр("Дисциплина", Дисциплина);
	ТЗ_РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	Возврат ТЗ_РезультатЗапроса.Количество() <> 0;			 
КонецФункции

&НаСервере
Процедура ПометитьДисциплиныДляОкраса()
	ТЧДисциплин = Объект.Дисциплины.Выгрузить(,"Дисциплина");
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТЧДисциплин.Дисциплина
	|ПОМЕСТИТЬ ВнутТабДисциплин
	|ИЗ
	|	&ТЧДисциплин КАК ТЧДисциплин
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ВложЗапрос.Дисц ЕСТЬ NULL
	|				ИЛИ ВложЗапрос.Дисц = ЗНАЧЕНИЕ(Справочник.Дисциплины.ПустаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Раскрас
	|ИЗ
	|	ВнутТабДисциплин КАК ВнутТабДисциплин
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			ПроектыУПДисциплины.Дисциплина КАК Дисц
	|		ИЗ
	|			Документ.ПроектыУП.Дисциплины КАК ПроектыУПДисциплины
	|		ГДЕ
	|			ПроектыУПДисциплины.Ссылка <> &План
	|			И ПроектыУПДисциплины.Ссылка.ФормаОбучения = &ФормаОбучения) КАК ВложЗапрос
	|		ПО ВнутТабДисциплин.Дисциплина = ВложЗапрос.Дисц";	
	Запрос.УстановитьПараметр("ТЧДисциплин", ТЧДисциплин);
	Запрос.УстановитьПараметр("ФормаОбучения", Объект.ФормаОбучения);
	Запрос.УстановитьПараметр("План", Объект.Ссылка);
	ТЗНайденные = Запрос.Выполнить().Выгрузить();
	
	Кол = Объект.Дисциплины.Количество() - 1; 
	Для Инд = 0 По Кол Цикл
		Объект.Дисциплины[Инд].ДляДисциплины = ТЗНайденные[Инд].Раскрас;
	КонецЦикла;
КонецПроцедуры

// Компетенции
&НаСервере
Процедура ПометитьКомпетенцииДляОкраса()
	ТЧКомпетенций = Объект.КомпетенцииПлана.Выгрузить(,"НаименованиеКомпетенции");
	ТЧДисциплин = Объект.Дисциплины.Выгрузить(,"Дисциплина");
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТЧКомпетенций.НаименованиеКомпетенции
	|ПОМЕСТИТЬ ВнутТабКомпетенций
	|ИЗ
	|	&ТЧКомпетенций КАК ТЧКомпетенций
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ВложЗапрос.Комп ЕСТЬ NULL
	|				ИЛИ ВложЗапрос.Комп = ЗНАЧЕНИЕ(Справочник.Дисциплины.ПустаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Раскрас
	|ИЗ
	|	ВнутТабКомпетенций КАК ВнутТабКомпетенций
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			ПроектыУПКомпетенцииПлана.НаименованиеКомпетенции КАК Комп
	|		ИЗ
	|			Документ.ПроектыУП.КомпетенцииПлана КАК ПроектыУПКомпетенцииПлана
	|		ГДЕ
	|			ПроектыУПКомпетенцииПлана.Ссылка <> &План
	|			И ПроектыУПКомпетенцииПлана.Ссылка.ФормаОбучения = &ФормаОбучения) КАК ВложЗапрос
	|		ПО ВнутТабКомпетенций.НаименованиеКомпетенции = ВложЗапрос.Комп";	
	Запрос.УстановитьПараметр("ТЧКомпетенций", ТЧКомпетенций);
	Запрос.УстановитьПараметр("ФормаОбучения", Объект.ФормаОбучения);
	Запрос.УстановитьПараметр("План", Объект.Ссылка);
	ТЗНайденные = Запрос.Выполнить().Выгрузить();
	
	Кол = Объект.КомпетенцииПлана.Количество() - 1; 
	Для Инд = 0 По Кол Цикл
		Объект.КомпетенцииПлана[Инд].ДляРаскраски = ТЗНайденные[Инд].Раскрас;
	КонецЦикла;
КонецПроцедуры

// Дневная ФО
&НаСервере
Процедура ПометитьЯчейкиДневнаяФО()
	Строки = Объект.Дисциплины;
	Для Каждого Стр Из Строки Цикл
		Стр.ДляАудиторныхЧасов = "" + Стр.АудиторныхЧасов - (Стр.Лекции + Стр.Практические + Стр.Лабораторные + Стр.Семинарские);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПометитьСтрокуДляОкрасаДневаняФО()
	Стр = Элементы.Дисциплины.ТекущиеДанные;
	Стр.ДляАудиторныхЧасов = "" + Стр.АудиторныхЧасов - (Стр.Лекции + Стр.Практические + Стр.Лабораторные + Стр.Семинарские);
КонецПроцедуры

// Заочная ФО
&НаСервере
Процедура ПометитьЯчейкиЗаочнаяФО()
	Строки = Объект.Дисциплины;
	Для Каждого Стр Из Строки Цикл
		Стр.АнализЛекций = "" + Стр.ЛекционныеЗанятия - (Стр.Лекции + Стр.ЛКУст);
		Стр.АнализПрактик = "" + Стр.ПрактическиеСеминарские - (Стр.Практические + Стр.ПЗСЗУст);
		Стр.АнализЛабораторных = "" + Стр.ЛабораторныеЗанятия - (Стр.Лабораторные + Стр.ЛБУст);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПометитьСтрокуДляОкрасаЗаочнаяФО()
	Стр = Элементы.Дисциплины.ТекущиеДанные;
	Стр.АнализЛекций = "" + Стр.ЛекционныеЗанятия - (Стр.Лекции + Стр.ЛКУст);
	Стр.АнализПрактик = "" + Стр.ПрактическиеСеминарские - (Стр.Практические + Стр.ПЗСЗУст);
	Стр.АнализЛабораторных = "" + Стр.ЛабораторныеЗанятия - (Стр.Лабораторные + Стр.ЛБУст);
КонецПроцедуры

&НаСервере
Процедура РаскрасДисциплин()
	//---------------------- Новый дисциплины ---------------------------------------
	// Определяем условия сравнения для Правой части и цвета оформления
	НовыеДисциплины = УсловноеОформление.Элементы.Добавить();	
	НовыеДисциплины.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.БледноЗолотистый);
	
	// Здесь задаем по какому полю будем делать отбор
	ОтборЭлемента = НовыеДисциплины.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Дисциплины.ДляДисциплины");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
	ОтборЭлемента.ПравоеЗначение = Ложь; 
	ОтборЭлемента.Использование = Истина;
	
	// Определяем оформляемые поля (Если через Цикл и метаданные, тогда все поля оформляются 
	ОформляемыеПоля = НовыеДисциплины.Поля.Элементы.Добавить();
	ОформляемыеПоля.Поле = Новый ПолеКомпоновкиДанных("ДисциплиныДисциплина");
КонецПроцедуры

&НаСервере
Процедура РаскрасКомпетенций()
	// Определяем условия сравнения для Правой части и цвета оформления
	НовыеДисциплины = УсловноеОформление.Элементы.Добавить();	
	НовыеДисциплины.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.БледноЗолотистый);
	
	// Здесь задаем по какому полю будем делать отбор
	ОтборЭлемента = НовыеДисциплины.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.КомпетенцииПлана.ДляРаскраски");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
	ОтборЭлемента.ПравоеЗначение = Ложь; 
	ОтборЭлемента.Использование = Истина;
	
	// Определяем оформляемые поля (Если через Цикл и метаданные, тогда все поля оформляются 
	ОформляемыеПоля = НовыеДисциплины.Поля.Элементы.Добавить();
	ОформляемыеПоля.Поле = Новый ПолеКомпоновкиДанных("КомпетенцииПланаНаименованиеКомпетенции")
КонецПроцедуры

&НаСервере
Процедура РаскрасЯчеекДневнаяФО();
	//---------------------- Сумма аудиторных ---------------------------------------
	// Определяем условия сравнения для Правой части и цвета оформления
	ЭлементСуммаАуд = УсловноеОформление.Элементы.Добавить();	
	ЭлементСуммаАуд.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.БледноСиреневый);
	
	// Здесь задаем по какому полю будем делать отбор
	ОтборЭлемента = ЭлементСуммаАуд.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Дисциплины.ДляАудиторныхЧасов");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
	ОтборЭлемента.ПравоеЗначение = "0"; 
	ОтборЭлемента.Использование = Истина;
	
	// Определяем оформляемые поля (Если через Цикл и метаданные, тогда все поля оформляются  
	ОформляемыеПоля = ЭлементСуммаАуд.Поля.Элементы.Добавить();
	ОформляемыеПоля.Поле = Новый ПолеКомпоновкиДанных("ДисциплиныАудиторныхЧасов");
КонецПроцедуры

&НаСервере
Процедура РаскрасЯчеекЗаочнаяФО();
	//----------------------ЛК---------------------------------------
	// Определяем условия сравнения для Правой части и цвета оформления
	ЭлементЛК = УсловноеОформление.Элементы.Добавить();	
	ЭлементЛК.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.БледноСиреневый);
	
	// Здесь задаем по какому полю будем делать отбор
	ОтборЭлемента = ЭлементЛК.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Дисциплины.АнализЛекций");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
	ОтборЭлемента.ПравоеЗначение = "0"; 
	ОтборЭлемента.Использование = Истина;
	
	// Определяем оформляемые поля (Если через Цикл и метаданные, тогда все поля оформляются  
	ОформляемыеПоля = ЭлементЛК.Поля.Элементы.Добавить();
	ОформляемыеПоля.Поле = Новый ПолеКомпоновкиДанных("ДисциплиныЛекционныеЗанятия");
	
	//----------------------ЛБ---------------------------------------
	// Определяем условия сравнения для Правой части и цвета оформления
	ЭлементЛБ = УсловноеОформление.Элементы.Добавить();	
	ЭлементЛБ.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.БледноСиреневый);
	
	// Здесь задаем по какому полю будем делать отбор
	ОтборЭлемента = ЭлементЛБ.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Дисциплины.АнализЛабораторных");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
	ОтборЭлемента.ПравоеЗначение = "0"; 
	ОтборЭлемента.Использование = Истина;
	
	// Определяем оформляемые поля (Если через Цикл и метаданные, тогда все поля оформляются  
	ОформляемыеПоля = ЭлементЛБ.Поля.Элементы.Добавить();
	ОформляемыеПоля.Поле = Новый ПолеКомпоновкиДанных("ДисциплиныЛабораторныеЗанятия");
	
	//----------------------ПЗ---------------------------------------
	// Определяем условия сравнения для Правой части и цвета оформления
	ЭлементПЗ = УсловноеОформление.Элементы.Добавить();	
	ЭлементПЗ.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.БледноСиреневый);
	
	// Здесь задаем по какому полю будем делать отбор
	ОтборЭлемента = ЭлементПЗ.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Дисциплины.АнализПрактик");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
	ОтборЭлемента.ПравоеЗначение = "0"; 
	ОтборЭлемента.Использование = Истина;
	
	// Определяем оформляемые поля (Если через Цикл и метаданные, тогда все поля оформляются  
	ОформляемыеПоля = ЭлементПЗ.Поля.Элементы.Добавить();
	ОформляемыеПоля.Поле = Новый ПолеКомпоновкиДанных("ДисциплиныПрактическиеСеминарские");
	ОформляемыеПоля = ЭлементПЗ.Поля.Элементы.Добавить();
	ОформляемыеПоля.Поле = Новый ПолеКомпоновкиДанных("ДисциплиныАудиторныхЧасов");
КонецПроцедуры

#КонецОбласти