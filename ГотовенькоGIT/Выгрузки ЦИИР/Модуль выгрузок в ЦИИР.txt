&НаСервере
Функция ВыводВТекстовыйФайлДляЦИИР(ПутьКПапке) Экспорт
	Текст = Новый ТекстовыйДокумент;
	ПолноеИмяФайла = ПутьКПапке+"\XML_Employees_1C.xml";	
	Запрос = Новый Запрос;
	Запрос.Текст = 	
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Договор.ФИО,
		|	ВЫБОР
		|		КОГДА Договор.ПолСотрудника = ЗНАЧЕНИЕ(Перечисление.ПолСотрудника.муж)
		|			ТОГДА ""М""
		|		ИНАЧЕ ""Ж""
		|	КОНЕЦ КАК Пол,
		|	Договор.ФИО.ДатаРождения КАК ДатаРождения,
		|	Договор.УченЗвание КАК УченЗвание,
		|	Договор.УчСтепень.ПолноеНаименование КАК УчСтепень,
		|	Договор.ФИО.ПаспортЛичНом КАК ЛичныйНомер,
		|	Договор.ФИО.ДокументУдостоверяющийЛичность КАК ДокументУдостоверяющийЛичность,
		|	Договор.ФИО.КодСтраны КАК КодСтраны,
		|	Договор.ФИО.ПаспортСерия КАК ПаспортСерия,
		|	Договор.ФИО.ПаспортНомер КАК ПаспортНомер,
		|	Договор.ФИО.ПаспортДатаВыдачи КАК ПаспортДатаВыдачи,
		|	Договор.ФИО.ОрганВыдПаспорт КАК ОрганВыдПаспорт,
		|	Договор.ФИО.ТелефонДом КАК ТелефонДом,
		|	Договор.ФИО.ТелефонМоб КАК ТелефонМоб,
		|	Договор.ФИО.ТелефонРаб КАК ТелефонРаб,
		|	Договор.ФИО.EmailСотрудника КАК EmailСотрудника,
		|	Договор.ФИО.АдресПрописки КАК АдресПрописки,
		|	Договор.Кафедра.НомерКафедры КАК НомерКафедры,
		|	ВЫБОР
		|		КОГДА Договор.Кафедра.Название = ""Электронных вычислительных средств""
		|			ТОГДА ""электронно-вычислительных средств""
		|		КОГДА Договор.Кафедра.Название = ""Физвоспитания""
		|			ТОГДА ""физического воспитания""
		|		ИНАЧЕ Договор.Кафедра.Название
		|	КОНЕЦ КАК КафедраНазвание,
		|	ВЫБОР
		|		КОГДА Договор.Кафедра.Наименование = ""ЗИ""
		|			ТОГДА ""защиты инф.""
		|		КОГДА Договор.Кафедра.Наименование = ""ИнЯз""
		|			ТОГДА ""ин.язык""
		|		КОГДА Договор.Кафедра.Наименование = ""МПК""
		|			ТОГДА ""МПК""
		|		КОГДА Договор.Кафедра.Наименование = ""ИПиЭ""
		|			ТОГДА ""ИПЭ""
		|		КОГДА Договор.Кафедра.Наименование = ""ООД""
		|			ТОГДА ""общеобр.дисциплин""
		|		КОГДА Договор.Кафедра.Наименование = ""РЭТ ВВС и войск ПВО""
		|			ТОГДА ""РЭТ ВВС""
		|		КОГДА Договор.Кафедра.Наименование = ""ТиОВП""
		|			ТОГДА ""ТиОП""
		|		КОГДА Договор.Кафедра.Наименование = ""ЭИ""
		|			ТОГДА ""эконом.инф.""
		|		КОГДА Договор.Кафедра.Наименование = ""ФВ""
		|			ТОГДА ""физ.восп.""
		|		КОГДА Договор.Кафедра.Наименование = ""Информатики""
		|			ТОГДА ""информатики""
		|		КОГДА Договор.Кафедра.Наименование = ""Менеджмента""
		|			ТОГДА ""менеджмента""
		|		КОГДА Договор.Кафедра.Наименование = ""Связи""
		|			ТОГДА ""связи""
		|		КОГДА Договор.Кафедра.Наименование = ""Физики""
		|			ТОГДА ""физики""
		|		КОГДА Договор.Кафедра.Наименование = ""Философии""
		|			ТОГДА ""философии""
		|		КОГДА Договор.Кафедра.Наименование = ""Экономики""
		|			ТОГДА ""экономики""
		|		КОГДА Договор.Кафедра.Наименование = ""Электроники""
		|			ТОГДА ""электроники""
		|		ИНАЧЕ Договор.Кафедра.Наименование
		|	КОНЕЦ КАК Кафедра,
		|	Договор.ДатаС,
		|	Договор.ДатаПО,
		|	Договор.ВидРаботы.Наименование
		|ИЗ
		|	Документ.Договор КАК Договор
		|ГДЕ
		|	Договор.ДатаПО >= &ТекущаяДата
		|
		|УПОРЯДОЧИТЬ ПО
		|	Договор.ФИО
		|АВТОУПОРЯДОЧИВАНИЕ";               
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
	ТЗ_РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	Текст.ДобавитьСтроку("<?xml version=""1.0"" encoding=""UTF-8""?>");           
	Текст.ДобавитьСтроку("<dataset>");              
	Текст.ДобавитьСтроку("<!--Start of employees-->");
			
	Для Индекс = 0 По ТЗ_РезультатЗапроса.Количество() - 1 Цикл
		 
        Элемент = ТЗ_РезультатЗапроса[Индекс];
		Если Лев(Элемент.ВидРаботыНаименование,4)="Акты"  Тогда
			Продолжить;
		КонецЕсли;
		//Кафедра = ПолучитьКафедру(Строка(Элемент.Кафедра));//
		ФИОСотрудника = ОбщиеФункции.РазделитьНаФамилиюИмяОтчество(Элемент.ФИО);
		
		Текст.ДобавитьСтроку("    <EMPLOYEE>");                                       
		Текст.ДобавитьСтроку("        <LAST_NAME>" + ФИОСотрудника.Фамилия + "</LAST_NAME>"); 
		Текст.ДобавитьСтроку("        <FIRST_NAME>" + ФИОСотрудника.Имя + "</FIRST_NAME>");
		Текст.ДобавитьСтроку("        <MIDDLE_NAME>" + ФИОСотрудника.Отчество + "</MIDDLE_NAME>");
		Текст.ДобавитьСтроку("        <LATIN_NAME></LATIN_NAME>");
		Текст.ДобавитьСтроку("        <LATIN_SURNAME></LATIN_SURNAME>");	
		Текст.ДобавитьСтроку("        <SEX>" + Элемент.Пол + "</SEX>"); 
		Текст.ДобавитьСтроку("        <BIRTH_DATE>" + Формат(Элемент.ДатаРождения, "ДФ=dd.MM.yyyy") + "</BIRTH_DATE>"); 
		Текст.ДобавитьСтроку("        <TITLE>" + Элемент.УченЗвание + "</TITLE>");  
		Текст.ДобавитьСтроку("        <DEGREE>" + Элемент.УчСтепень + "</DEGREE>");  
		Текст.ДобавитьСтроку("        <PERSONAL_NUMBER>" + Элемент.ЛичныйНомер + "</PERSONAL_NUMBER>");
		Текст.ДобавитьСтроку("        <DOCUMENT>");
		Текст.ДобавитьСтроку("            <IDENTITY_CARD_TYPE>" + Элемент.ДокументУдостоверяющийЛичность + "</IDENTITY_CARD_TYPE>");
		Текст.ДобавитьСтроку("            <CITIZENSHIP>" + Элемент.КодСтраны + "</CITIZENSHIP>");
		Текст.ДобавитьСтроку("            <SERIA>" + Элемент.ПаспортСерия + "</SERIA>");
		Текст.ДобавитьСтроку("            <SERIAL_NUMBER>" + Элемент.ПаспортНомер + "</SERIAL_NUMBER>");
		Текст.ДобавитьСтроку("            <ISSUE_DATE>" + Формат(Элемент.ПаспортДатаВыдачи, "ДФ=dd.MM.yyyy") + "</ISSUE_DATE>");	
		Текст.ДобавитьСтроку("            <ISSUE_ORGANIZATION>" + Элемент.ОрганВыдПаспорт + "</ISSUE_ORGANIZATION>");
		Текст.ДобавитьСтроку("            <VALID_DATE></VALID_DATE>");
		Текст.ДобавитьСтроку("        </DOCUMENT>");	
		Текст.ДобавитьСтроку("        <JOBS>");  
		Текст.ДобавитьСтроку("            <ITEM>");
		Текст.ДобавитьСтроку("                <ID_DEPARTMENT>" + Формат(Элемент.НомерКафедры, "ЧГ=") + "</ID_DEPARTMENT>");
		Текст.ДобавитьСтроку("                <DEPARTMENT_NAME>кафедра " + НРег(Лев(Элемент.КафедраНазвание,1)) + Сред(Элемент.КафедраНазвание,2) + "</DEPARTMENT_NAME>");
		Текст.ДобавитьСтроку("                <DEPARTMENT_ABBREV>каф." + Элемент.Кафедра + "</DEPARTMENT_ABBREV>");
		Текст.ДобавитьСтроку("                <DOLZ></DOLZ>");
		Текст.ДобавитьСтроку("                <DOLZ_SHORT></DOLZ_SHORT>");
		Текст.ДобавитьСтроку("                <STAVKA></STAVKA>");  
		Текст.ДобавитьСтроку("                <TYPE_WORK>Гражданско-правовой договор</TYPE_WORK>");
		Текст.ДобавитьСтроку("                <DATE_START>" + Формат(Элемент.ДатаС, "ДФ=dd.MM.yyyy") + "</DATE_START>");
		Текст.ДобавитьСтроку("                <DATE_END>" + Формат(Элемент.ДатаПО, "ДФ=dd.MM.yyyy") + "</DATE_END>");
		Текст.ДобавитьСтроку("            </ITEM>");
		Пока Истина Цикл                                                                           		// Цикл, чтобы обойти всех повторяющихся сотрудников
			Если Индекс < ТЗ_РезультатЗапроса.Количество() - 1 Тогда                                    // Если следующий существует (не вышли за пределы массива)
				Следующий = ТЗ_РезультатЗапроса[Индекс + 1];                                            // Получаем объект следующего сотрудника
				Если Следующий.ФИО = Элемент.ФИО И Следующий.ЛичныйНомер = Элемент.ЛичныйНомер Тогда    // Если совпали, то добавляем ещё 1 место работы
					Текст.ДобавитьСтроку("            <ITEM>");
					Текст.ДобавитьСтроку("                <ID_DEPARTMENT>" + Формат(Следующий.НомерКафедры, "ЧГ=") + "</ID_DEPARTMENT>");
					Текст.ДобавитьСтроку("                <DEPARTMENT_NAME>кафедра " + НРег(Лев(Элемент.КафедраНазвание,1)) + Сред(Элемент.КафедраНазвание,2) + "</DEPARTMENT_NAME>");
					Текст.ДобавитьСтроку("                <DEPARTMENT_ABBREV>каф." + Элемент.Кафедра + "</DEPARTMENT_ABBREV>");
					Текст.ДобавитьСтроку("                <DOLZ></DOLZ>");
					Текст.ДобавитьСтроку("                <DOLZ_SHORT></DOLZ_SHORT>");
					Текст.ДобавитьСтроку("                <STAVKA></STAVKA>");  
					Текст.ДобавитьСтроку("                <TYPE_WORK>Гражданско-правовой договор</TYPE_WORK>");
					Текст.ДобавитьСтроку("                <DATE_START>" + Формат(Следующий.ДатаС, "ДФ=dd.MM.yyyy") + "</DATE_START>");
					Текст.ДобавитьСтроку("                <DATE_END>" + Формат(Следующий.ДатаПО, "ДФ=dd.MM.yyyy") + "</DATE_END>");
					Текст.ДобавитьСтроку("            </ITEM>");
					Индекс = Индекс + 1;
				Иначе
					Прервать;																			// Если следующий не равен текущему, то переходим к заполнению контактов
				КонецЕсли;
			Иначе 
				Прервать;																				// Если следующий не существует, то переходим к заполнению контактов
			КонецЕсли;
		КонецЦикла;
		Текст.ДобавитьСтроку("        </JOBS>");
		Текст.ДобавитьСтроку("        <CONTACTS>");
		Если Элемент.ТелефонРаб <> "" Тогда
			Текст.ДобавитьСтроку("            <ITEM>");
			Текст.ДобавитьСтроку("                <CONTACT_TYPE>Рабочий телефон</CONTACT_TYPE>");
			Текст.ДобавитьСтроку("                <CONTACT_VALUE>" + Элемент.ТелефонРаб + "</CONTACT_VALUE>");
			Текст.ДобавитьСтроку("            </ITEM>");
		КонецЕсли;
		Если Элемент.ТелефонДом <> "" Тогда
			Текст.ДобавитьСтроку("            <ITEM>");
			Текст.ДобавитьСтроку("                <CONTACT_TYPE>Домашний телефон</CONTACT_TYPE>");
			Текст.ДобавитьСтроку("                <CONTACT_VALUE>" + Элемент.ТелефонДом + "</CONTACT_VALUE>");
			Текст.ДобавитьСтроку("            </ITEM>");
		КонецЕсли;
		Если Элемент.ТелефонМоб <> "" Тогда
			Текст.ДобавитьСтроку("            <ITEM>");
			Текст.ДобавитьСтроку("                <CONTACT_TYPE>Мобильный телефон</CONTACT_TYPE>");
			Текст.ДобавитьСтроку("                <CONTACT_VALUE>" + Элемент.ТелефонМоб + "</CONTACT_VALUE>");
			Текст.ДобавитьСтроку("            </ITEM>");
		КонецЕсли;
		Если Элемент.EmailСотрудника.Наименование <> "" Тогда
			Текст.ДобавитьСтроку("            <ITEM>");
			Текст.ДобавитьСтроку("                <CONTACT_TYPE>Электронная почта</CONTACT_TYPE>");
			Текст.ДобавитьСтроку("                <CONTACT_VALUE>" + Элемент.EmailСотрудника.Наименование + "</CONTACT_VALUE>");
			Текст.ДобавитьСтроку("            </ITEM>");
		КонецЕсли;
		Текст.ДобавитьСтроку("        </CONTACTS>");
		Текст.ДобавитьСтроку("        <ADDRESSES>");
		Если Элемент.АдресПрописки <> "" Тогда
			Текст.ДобавитьСтроку("            <ITEM>");
			Текст.ДобавитьСтроку("                <ADDRESS_TYPE>Постоянная регистрация</ADDRESS_TYPE>");
			Текст.ДобавитьСтроку("                <ZIP_CODE></ZIP_CODE>");
			Текст.ДобавитьСтроку("                <COUNTRY></COUNTRY>");
			Текст.ДобавитьСтроку("                <REGION></REGION>");
			Текст.ДобавитьСтроку("                <DISTRICT></DISTRICT>");
			Текст.ДобавитьСтроку("                <LOCALITY_TYPE></LOCALITY_TYPE>");
			Текст.ДобавитьСтроку("                <LOCALITY></LOCALITY>");
			Текст.ДобавитьСтроку("                <STREET_TYPE></STREET_TYPE>");
			Текст.ДобавитьСтроку("                <STREET></STREET>");
			Текст.ДобавитьСтроку("                <HOUSE_NUMBER></HOUSE_NUMBER>");
			Текст.ДобавитьСтроку("                <BUILDING_NUMBER></BUILDING_NUMBER>");
			Текст.ДобавитьСтроку("                <FLAT_NUMBER></FLAT_NUMBER>");
			Текст.ДобавитьСтроку("                <ALT_ADDRESS>" + Элемент.АдресПрописки + "</ALT_ADDRESS>");
			Текст.ДобавитьСтроку("            </ITEM>");
		КонецЕсли;
		Текст.ДобавитьСтроку("        </ADDRESSES>");
		Текст.ДобавитьСтроку("    </EMPLOYEE>");
	КонецЦикла;
	
	Текст.ДобавитьСтроку("<!--End of employees-->");
	Текст.ДобавитьСтроку("</dataset>");
	Текст.Записать(ПолноеИмяФайла);
	Возврат ПутьКПапке;
КонецФункции


#Область ЗагрузитьРаспределениеЦИИР

&НаСервере
Процедура ЗагрузитьРаспределениеЦИИР() Экспорт
	ПутьКФайлу = "E:\Incoming\studDistribution.xlsx";
	
	ПараметрыСоединения = Новый ПараметрыСоединенияВнешнегоИсточникаДанных; 
	ПараметрыСоединения.СтрокаСоединения= 
	"Driver={Microsoft Excel Driver (*.xls, *.xlsx, *.xlsm, *.xlsb)};DBQ="+ПутьКФайлу;
	ВнешниеИсточникиДанных.Excel.УстановитьОбщиеПараметрыСоединения(ПараметрыСоединения); 
	ВнешниеИсточникиДанных.Excel.УстановитьСоединение();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Распределение.Ссылка,
		|	Распределение.ФИО,
		|	Распределение.НомерГруппы,
		|	Распределение.ВидОплаты,
		|	Распределение.Предприятие,
		|	Распределение.Пол,
		|	Распределение.ГодРождения,
		|	Распределение.СемейноеПоложение,
		|	Распределение.АдресМестаЖительства,
		|	Распределение.Факультет,
		|	Распределение.АдресПредприятия
		|ИЗ
		|	ВнешнийИсточникДанных.Excel.Таблица.Распределение КАК Распределение
		|ГДЕ
		|	(Распределение.ВидОплаты = ""Бюджет""
		|			ИЛИ Распределение.ВидОплаты <> ""Бюджет""
		|				И Распределение.Предприятие <> "" "")";
	
	ТЗ_РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	//удалить пробелы и перенос строки
	Для Каждого элемент из ТЗ_РезультатЗапроса Цикл
		Если элемент.Предприятие = " " Тогда
		элемент.Предприятие = "";
	КонецЕсли;
		элемент.АдресПредприятия = СокрЛП(СтрЗаменить(элемент.АдресПредприятия, Символы.ПС, " "));
	КонецЦикла;
	
	ВнешниеИсточникиДанных.Excel.РазорватьСоединение();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТЗ_РезультатЗапроса.ФИО,
		|	ТЗ_РезультатЗапроса.НомерГруппы,
		|	ТЗ_РезультатЗапроса.ВидОплаты,
		|	ТЗ_РезультатЗапроса.Предприятие,
		|	ТЗ_РезультатЗапроса.Пол,
		|	ТЗ_РезультатЗапроса.ГодРождения,
		|	ТЗ_РезультатЗапроса.СемейноеПоложение,
		|	ТЗ_РезультатЗапроса.АдресМестаЖительства,
		|	ТЗ_РезультатЗапроса.АдресПредприятия
		|ПОМЕСТИТЬ ВТ
		|ИЗ
		|	&ТЗ_РезультатЗапроса КАК ТЗ_РезультатЗапроса
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТ.ФИО КАК ФИОСтудента,
		|	ВТ.НомерГруппы,
		|	ВТ.ВидОплаты КАК Оплата,
		|	ВТ.Предприятие,
		|	ВТ.Пол,
		|	ВТ.ГодРождения,
		|	ВТ.СемейноеПоложение,
		|	ВТ.АдресМестаЖительства,
		|	УчебныеПланыВсеШапки.Факультет,
		|	УчебныеПланыВсеШапки.ФормаОбучения,
		|	УчебныеПланыВсеШапки.Специальность,
		//|	УчебныеПланыВсеШапки.НомераГрупп,
		|	УчебныеПланыВсеШапки.ГодНабора,
		|	УчебныеПланыВсеШапки.Курс,
		|	ВТ.АдресПредприятия
		|ИЗ
		|	ВТ КАК ВТ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчебныеПланыВсеШапки КАК УчебныеПланыВсеШапки
		|		ПО (ПОДСТРОКА(ВТ.НомерГруппы, 1, 5) = ПОДСТРОКА(УчебныеПланыВсеШапки.НомераГрупп, 1, 5))";
	
	Запрос.УстановитьПараметр("ТЗ_РезультатЗапроса", ТЗ_РезультатЗапроса);
	
	ТЗ_РезультатЗапроса_2 = Запрос.Выполнить().Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТЗ_РезультатЗапроса_2.Факультет
		|ПОМЕСТИТЬ ВТ
		|ИЗ
		|	&ТЗ_РезультатЗапроса_2 КАК ТЗ_РезультатЗапроса_2
		|ГДЕ
		|	ТЗ_РезультатЗапроса_2.Факультет <> ЗНАЧЕНИЕ(Перечисление.Факультеты.ВФ)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ.Факультет
		|ИЗ
		|	ВТ КАК ВТ
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ.Факультет";
	Запрос.УстановитьПараметр("ТЗ_РезультатЗапроса_2", ТЗ_РезультатЗапроса_2);
	ТЗ_Факультеты = Запрос.Выполнить().Выгрузить();
	
	МассивФакультеты = ТЗ_Факультеты.ВыгрузитьКолонку("Факультет");
		
	Для каждого ФакультетЭлемент из МассивФакультеты Цикл
		Отбор = Новый Структура;
    	Отбор.Вставить("Факультет", ФакультетЭлемент);
    	КопияТаб = ТЗ_РезультатЗапроса_2.Скопировать(Отбор);
	
		СсылкаДеканат = ПолучитьСсылку(ФакультетЭлемент);
		_Объект = СсылкаДеканат.ПолучитьОбъект();
		_Объект.ТЧ.Загрузить(КопияТаб);
		Для Каждого элемент из _Объект.ТЧ Цикл
			элемент.ПодлежитРаспределению = Истина;
		КонецЦикла;
		_Объект.Записать(РежимЗаписиДокумента.Проведение);
	КонецЦикла
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСсылку(Факультет)
	Если   Факультет=Перечисления.Факультеты.ФКП Тогда  Возврат Документы.РаспределениеВыпускниковФКП.НайтиПоНомеру("000000001").Ссылка
	ИначеЕсли Факультет=Перечисления.Факультеты.ИЭФ Тогда  Возврат Документы.РаспределениеВыпускниковИЭФ.НайтиПоНомеру("000000001").Ссылка	
	ИначеЕсли Факультет=Перечисления.Факультеты.ФИТУ Тогда  Возврат Документы.РаспределениеВыпускниковФИТУ.НайтиПоНомеру("000000001").Ссылка
	ИначеЕсли Факультет=Перечисления.Факультеты.ФКСиС Тогда  Возврат Документы.РаспределениеВыпускниковФКСиС.НайтиПоНомеру("000000001").Ссылка	
	ИначеЕсли Факультет=Перечисления.Факультеты.ФРЭ Тогда  Возврат Документы.РаспределениеВыпускниковФРЭ.НайтиПоНомеру("000000001").Ссылка	
	ИначеЕсли Факультет=Перечисления.Факультеты.ФИК Тогда  Возврат Документы.РаспределениеВыпускников.НайтиПоНомеру("000000001").Ссылка
	КонецЕсли;
	
КонецФункции

#КонецОбласти

&НаСервере
Процедура ВыгрузитьСправочникСотрудников(ПутьКФайлу) Экспорт
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	Сотрудники.Наименование,
	               |	Сотрудники.Кафедра,
	               |	Сотрудники.УчЗвание,
	               |	Сотрудники.УчСтепень,
	               |	Сотрудники.СотрудникБГУИР,
	               |	Сотрудники.Пол,
	               |	Сотрудники.Пенсионер,
	               |	Сотрудники.ТелефонДом,
	               |	Сотрудники.ТелефонРаб,
	               |	Сотрудники.ТелефонМоб,
	               |	Сотрудники.EmailСотрудника,
	               |	Сотрудники.Образование,
	               |	Сотрудники.Специальность,
	               |	Сотрудники.АдресПрописки,
	               |	Сотрудники.КоличествоДетей,
	               |	Сотрудники.ПаспортЛичНом,
	               |	Сотрудники.ПаспортСтрахНом,
	               |	Сотрудники.ОсновнРаботаМесто,
	               |	Сотрудники.ОсновнРаботаДолжность,
	               |	Сотрудники.ОсновнРаботаУНП,
	               |	Сотрудники.ПенсионноеНомер,
	               |	Сотрудники.ОрганВыдПенсУлостов,
	               |	Сотрудники.ПаспортДатаВыдачи,
	               |	Сотрудники.ДатаРождения,
	               |	Сотрудники.ОрганВыдПаспорт,
	               |	Сотрудники.ПаспортСерия,
	               |	Сотрудники.ПаспортНомер,
	               |	Сотрудники.ИзбранКонкурсДата,
	               |	Сотрудники.ДокументУдостоверяющийЛичность,
	               |	Сотрудники.СтранаГражданства,
	               |	Сотрудники.КодСтраны,
	               |	Сотрудники.Путь,
	               |	Сотрудники.ОбменСОтделомКадров,
	               |	Сотрудники.IDпреподавателя,
	               |	Сотрудники.ПаспортСрокДействия,
	               |	Сотрудники.ПаспортФамилияЛатиница,
	               |	Сотрудники.ПаспортИмяЛатиница
	               |ИЗ
	               |	Справочник.Сотрудники КАК Сотрудники";		
	ТЗ = Запрос.Выполнить().Выгрузить();
	ЗаписатьТаблицуЗначенийВExcel(ТЗ, ПутьКФайлу);
КонецПроцедуры

&НаСервере
// Процедура сохраняет Таблицу значений в Excel файл (xlsx).
//
// Параметры:
//  ТЗ - Таблица значений - данные, которые будут записаны в файл.
//  ПутьКФайлу - Строка - полный путь к файлу (с расширением xlsx).
//
Процедура ЗаписатьТаблицуЗначенийВExcel(ТЗ, ПутьКФайлу) Экспорт
	ТабДок = Новый ТабличныйДокумент;
	Заголовки = Новый Структура;
	ОбластьВывода = ТабДок.ПолучитьОбласть(1, 1, 1, ТЗ.Колонки.Количество());
	
	// Описываем заполнение всех колонок как "Параметр"
	Для Инд = 1 По ТЗ.Колонки.Количество() Цикл
	    Ячейка = ОбластьВывода.Область(1, Инд, 1, Инд);
	    Ячейка.Заполнение = ТипЗаполненияОбластиТабличногоДокумента.Параметр;
		// Заполняем структуру заголовков таблицы
		Колонка = ТЗ.Колонки[Инд - 1];
		Ячейка.Параметр = Колонка.Имя;
	    Заголовки.Вставить(Колонка.Имя, Колонка.Имя);
	КонецЦикла;
	
	// Заполняем заголовки и данные в табличном документе
	ОбластьВывода.Параметры.Заполнить(Заголовки);
	ТабДок.Вывести(ОбластьВывода);
	Для Каждого СТЗ Из ТЗ Цикл
		ОбластьВывода.Параметры.Заполнить(СТЗ);
		ТабДок.Вывести(ОбластьВывода);
	КонецЦикла;
	
	ТабДок.Записать(ПутьКФайлу, ТипФайлаТабличногоДокумента.XLSX);	
КонецПроцедуры

Функция Тест() Экспорт
	возврат 550502;
КонецФункции

#Область СпискиАспирантовCSV

&НаСервере
Функция ВыводCSVФайлаАспирантов(ПутьКПапке) Экспорт
	ТЗ = СформироватьТЗГрупп();
	ЗаписьТЗВФайлCSV(ТЗ, ПутьКПапке);
КонецФункции

&НаСервере
Функция СформироватьТЗГрупп()
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Аспиранты.Наименование,
	|	Аспиранты.ГодНабора,
	|	Аспиранты.ВидОбучения,
	|	Аспиранты.СтатусОбучающегося,
	|	Аспиранты.Специальность,
	|	""                                                     "" КАК Группа,
	|	Аспиранты.ФормаОплаты,
	|	Аспиранты.КодСпециальности,
	|	Аспиранты.НазваниеСпециальности,
	|	Аспиранты.Кафедра,
	|	Аспиранты.СрокОкончания,
	|	Аспиранты.ДатаУхода,
	|	Аспиранты.ДатаВозврата,
	|	Аспиранты.Страна,
	|	Аспиранты.ЦелевойНабор,
	|	Аспиранты.НомерУдостоверения,
	|	Аспиранты.МобильныйТелефон,
	|	Аспиранты.ЭлектроннаяПочта,
	|	Аспиранты.ПаспортИДНомер,
	|	Аспиранты.ПриказОЗачислении,
	|	Аспиранты.ДатаПриказаЗачисления,
	|	Аспиранты.ПриказОВыпуске,
	|	Аспиранты.ДатаПриказаВыпуска,
	|	Аспиранты.ПриказУходАО,
	|	Аспиранты.ПричинаУходАО,
	|	Аспиранты.ПриказВыходИзАО,
	|	Аспиранты.ДатаОтчисления,
	|	Аспиранты.ПриказОбОтчислении,
	|	Аспиранты.ПричинаОтчисления,
	|	Аспиранты.ДатаВосстановления,
	|	Аспиранты.ПриказОВосстановлении,
	|	Аспиранты.Пол
	|ИЗ
	|	Справочник.Аспиранты КАК Аспиранты
	|ГДЕ
	|	НЕ Аспиранты.ЭтоГруппа
	|	И (Аспиранты.Родитель.Наименование = ""ОБУЧАЕТСЯ""
	|			ИЛИ Аспиранты.Родитель.Наименование = ""АКАДЕМ ОТПУСК"")";
	ТЗ_РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	Для Каждого Аспирант Из ТЗ_РезультатЗапроса Цикл
		Если ЗначениеЗаполнено(Аспирант.ГодНабора) Тогда
			Аспирант.Группа = Прав(Строка(Аспирант.ГодНабора), 1);	
		КонецЕсли;
		Если ЗначениеЗаполнено(Аспирант.СтатусОбучающегося) Тогда
			Аспирант.Группа = Аспирант.Группа + ?(Стрнайти(Аспирант.СтатусОбучающегося, "Доктор") <> 0, "D", "A");	
		КонецЕсли;
		Если ЗначениеЗаполнено(Аспирант.Специальность) Тогда
			Аспирант.Группа = Аспирант.Группа + Аспирант.Специальность.ШифрСпециальности;	
		КонецЕсли;
		Если ЗначениеЗаполнено(Аспирант.ВидОбучения) Тогда
			Аспирант.Группа = Аспирант.Группа + ПолучитьФОбучения(Аспирант.ВидОбучения);	
		КонецЕсли;
		Если ЗначениеЗаполнено(Аспирант.СтатусОбучающегося) Тогда 		
			Аспирант.Группа = Аспирант.Группа + ПолучитьСтатусОбучающегося(Аспирант.СтатусОбучающегося);	
		КонецЕсли;	
	КонецЦикла;
	Возврат ТЗ_РезультатЗапроса;
КонецФункции

&НаСервере
Функция ПолучитьСтатусОбучающегося(Статус)
	Если  	   Статус = "Аспирант-соискатель" 		Тогда СтатусОбучающегося = "1"	
	ИначеЕсли  Статус = "Аспирант" 					Тогда СтатусОбучающегося = "2"
	ИначеЕсли  Статус = "Докторант-соискатель" 		Тогда СтатусОбучающегося = "3"
	ИначеЕсли  Статус = "Ин. дневной ФО" 			Тогда СтатусОбучающегося = "4"
	ИначеЕсли  Статус = "Ин. заочной ФО" 			Тогда СтатусОбучающегося = "5"
	ИначеЕсли  Статус = "Докторант" 				Тогда СтатусОбучающегося = "6"
	КонецЕсли;	
	Возврат СтатусОбучающегося
КонецФункции	

&НаСервере
Функция ПолучитьФОбучения(ВидОбучения)
	Если 	  Строка(ВидОбучения) = "Дневное" 		Тогда ФормаОбучения = "0"	
	ИначеЕсли Строка(ВидОбучения) = "Заочное" 		Тогда ФормаОбучения = "1"
	ИначеЕсли Строка(ВидОбучения) = "Ин. граждане" 	Тогда ФормаОбучения = "2"
	ИначеЕсли Строка(ВидОбучения) = "Соискатели" 	Тогда ФормаОбучения = "3"
	КонецЕсли;	
	Возврат ФормаОбучения
КонецФункции

&НаСервере
Процедура ЗаписьТЗВФайлCSV(ТаблицаЗначений, ПутьКФайлу)
	ТекстCSV = "";
	КолонкиТЗ = ТаблицаЗначений.Колонки;
	Для Каждого Колонка Из КолонкиТЗ Цикл
		ТекстCSV = ТекстCSV + Колонка.Имя + ";";
	КонецЦикла;
	
	Для Каждого СтрокаТЗ Из ТаблицаЗначений Цикл
		ТекстCSV = ТекстCSV + Символы.ПС;
		Для Инд = 0 По КолонкиТЗ.Количество() - 1 Цикл
			ТекстCSV = ТекстCSV + СтрокаТЗ[Инд] + ";";
		КонецЦикла;
	КонецЦикла;
	
	Файл = Новый ЗаписьТекста(ПутьКФайлу, КодировкаТекста.UTF8);
	Файл.ЗаписатьСтроку(ТекстCSV);
	Файл.Закрыть();	
КонецПроцедуры

#КонецОбласти