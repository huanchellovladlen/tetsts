
#Область Работа_С_MySQL
// Полезные ссылки:
// 	ADODB.Command for update, dalete and other
// 	https://docs.microsoft.com/en-us/sql/ado/guide/data/creating-and-executing-a-simple-command?view=sql-server-ver15
// 	https://reks.biz/?p=2359
// 	http://www.askit.ru/custom/vba_office/m9/09_06_ado_command.htm
// 	https://www.w3schools.com/asp/prop_para_type.asp
// 	https://dev.mysql.com/doc/connector-odbc/en/connector-odbc-configuration-connection-without-dsn.html



// Запускает клиент SSH соединения. Используется PuTTY, а точнее PLink.
// PLink используется при установке SSH соединения в фоновом режиме, т.к. наследует состояние видимости хоста консоли:
// В данном случае 2-й аргументр команды Run. 0 - фоновый режим, 1 - видна консоль.
//
// Возвращаемое значение:
//   Булево		- Истина, если сценарий успешно выполнен. В противном случае - Ложь.
Функция ЗапуститьСеансPuTTY()
	Попытка
		Shell = Новый COMОбъект("Wscript.Shell");
		Shell.Run("""C:\Program Files\PuTTY\plink.exe"" -batch -load MySQL -l umroot -pw dfi87#*JDdfK8$$M9kd", 0);
	Исключение
		Сообщить("Невозможно инициализировать SSH соединение. Проверьте настройки PuTTY клиента");
		Возврат Ложь;
	КонецПопытки;
	Возврат Истина;
КонецФункции

// Закрывает все приложения PLink (разрывает соединенние) на машине
// Этот подход может быть небезопасен, но данный функционал будет использоваться ТОЛЬКО ОДНИМ пользователем,
//   поэтому можно пренебречь защитой в угоду эстетики (См разницу Wscript.Shell.Run и Wscript.Shell.Exec).  
// Возвращаемое значение:
//   Булево		- Истина, если сценарий успешно выполнен. В противном случае - Ложь.
Функция ЗакрытьСеансPuTTY()
	Попытка
		Shell = Новый COMОбъект("Wscript.Shell");
		Shell.Run("taskkill /im plink.exe", 0, True);
	Исключение
		Сообщить("Ошибка при закрытии сеанса PuTTY. Для автоматического закрытия сессии необходимо повторить выполненное действие");
		Возврат Ложь;
	КонецПопытки;
	Возврат Истина;
КонецФункции

// Функция получает данные с удалённой базы MySQL
// Для успешного подключения необходим драйвер ODBC 8.0.x MySQL, а так же ПО PuTTY для SSH коннекта.
// Параметры:
//   SQLЗапрос	- Строка	- Строка, содержащая готовый запрос к MySQL базе
// Возвращаемое значение:
//   ТаблицаЗначений        - ТЗ, которая содержит результаты запроса. Null, в случае ошибки.
//
//   ***Внимание, некоторые типы данных могу некорректно отображаться (Например, Время (TIME) отображается как сегодняшнее число + значение)***
Функция ПолучитьТЗИзMySqlБазы(SQLЗапрос) Экспорт
	Если Не ЗапуститьСеансPuTTY() Тогда
		Возврат Null;
	КонецЕсли;
	
	// 5 попыток подключения к БД через ODBC драйвер 
	Connection = Новый COMОбъект("ADODB.Connection");	
	Для КолОшибок = 0 По 5 Цикл
		Попытка	 
			Connection.Open("DRIVER={MySQL ODBC 8.0 Unicode Driver};
		                   |SERVER=localhost;
		                   |DATABASE=testmoodle;
						   |USER=reiko-remote;
		                   |PASSWORD=4$fgJh7h80YT$d!dsKy;");
		Исключение
			Если КолОшибок > 4 Тогда
				Сообщить(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
				ЗакрытьСеансPuTTY();
				Возврат Null;
			КонецЕсли;
			Connection = Новый COMОбъект("ADODB.Connection");
			Продолжить;
		КонецПопытки;
		Прервать;
	КонецЦикла;	
			
	// Выполнение запроса к MySQL базе
	Попытка
		RecordSet = Connection.Execute(SQLЗапрос);
	Исключение
		Сообщить(Connection.Errors(0).Description);
		Connection.Close();
		ЗакрытьСеансPuTTY();
		Возврат Null;
	КонецПопытки;
	
	//Формирование ТЗ + заполнеие полученными данными
	ТЗ = СформироватьТабЗн(RecordSet.Fields);
	Если RecordSet.EOF = Истина Тогда				// По запросу получено 0 строк 				
		Возврат ТЗ;
	КонецЕсли;
	
	RecordSet.MoveFirst();	
	Пока Не RecordSet.Eof() Цикл
		СтрТЗ = ТЗ.Добавить();
		Для Индекс = 0 По RecordSet.Fields.Count - 1 Цикл	
			СтрТЗ[Индекс] = Recordset.Fields(Индекс).Value; 		
		КонецЦикла;
		RecordSet.MoveNext();
	КонецЦикла;
	
	// Обязательно освобождаем ресурсы
	RecordSet.Close();
	Connection.Close();
	Если Не ЗакрытьСеансPuTTY() Тогда
		Возврат Null;
	КонецЕсли;
	Возврат ТЗ;
КонецФункции

// Функция формирует ТалицуЗначений из RecordSet объекта
// Параметры:
//   RecordSet	- RecordSet.Fields	- ADODB RecordSet содержит данные, которые получены в результате запроса к MySQL.								  работа с объектом похожа на читение файла. Есть BOF, EOF, Seek и прочее.
// Возвращаемое значение:
//   ТаблицаЗначений        - Пустая ТЗ, но уже с объявленными именами колонок
//
//   ***Внимание, некоторые типы данных могу некорректно отображаться (Например, Время (TIME) отображается как сегодняшнее число + значение)***
//   ***По хорошему надо добавить описание типов MySQL, см https://www.w3schools.com/asp/prop_para_type.asp***
Функция СформироватьТабЗн(Fields)
	ТЗ = Новый ТаблицаЗначений;
	Для Каждого Field Из Fields Цикл
		ТЗ.Колонки.Добавить(Field.Name);
	КонецЦикла;
	Возврат ТЗ;
КонецФункции

#КонецОбласти