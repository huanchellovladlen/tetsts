&НаКлиенте
Процедура ПечатьДФО(Команда)
	ТабДок = ПолучитьЗаполненныйПланДФО(Объект.Ссылка);
	ТабДок.Показать("Учебный план " + Объект.РегистрационныйНомерПлана);
	ТабДок.Записать("C:\План.xlsx", ТипФайлаТабличногоДокумента.XLSX);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьЗаполненныйПланДФО(ПроектПланаЫЫЫ)
	// 0) Мб проверки перед печатью сделать?
	ПроектПлана = Документы.ПроектыУП.НайтиПоНомеру("000000005");
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	Макет 				= Документы.ПроектыУП.ПолучитьМакет("Макет");
	
	// ---------------- Получаем области плана ----------------------
	ОблШапка 			= Макет.ПолучитьОбласть("Шапка");
	ОблНеделиШапка 		= Макет.ПолучитьОбласть("НеделиШапка");
	ОблНеделиТЧ 		= Макет.ПолучитьОбласть("НеделиТЧ");
	ОблНеделиВсего 		= Макет.ПолучитьОбласть("НеделиВсего");
	ОблОбозначения 		= Макет.ПолучитьОбласть("Обозначения");
	ОблПланШапка 		= Макет.ПолучитьОбласть("ПланШапка");
	ОблМодуль 			= Макет.ПолучитьОбласть("Модуль");
	ОблКомпонент		= Макет.ПолучитьОбласть("Компонента");
	ОблДисциплина 		= Макет.ПолучитьОбласть("Дисциплина");
	ОблПланПодвал 		= Макет.ПолучитьОбласть("ПланПодвал");
	ОблПодписи 			= Макет.ПолучитьОбласть("Подписи");
	ОблПрактики 		= Макет.ПолучитьОбласть("Практики");
	ОблКомпетенцииШапка = Макет.ПолучитьОбласть("КомпетенцииШапка");
	ОблКомпетенцииТЗ 	= Макет.ПолучитьОбласть("КомпетенцииТЗ");
	ОблПримечания 		= Макет.ПолучитьОбласть("Примечания");
	ОблПодвал 			= Макет.ПолучитьОбласть("Подвал");
	
	// ---------------- Заполняем Шапку плана ----------------------
	ОблШапка.Параметры.ФИОРектора 				 = "В. А. Богуш";
	ОблШапка.Параметры.ФИОРектора 				 = ФорматФИО(ПроектПлана.ФИОРуководителя.Наименование);
	ОблШапка.Параметры.РегистрационныйНомерПлана = ПроектПлана.РегистрационныйНомерПлана;
	ОблШапка.Параметры.Специальность			 = "Специальность: " + ПроектПлана.КодСпециальности + " " + ПроектПлана.Специальность.НазваниеСпециальности;
	ОблШапка.Параметры.Направление				 = "Направление специальности: " + ПроектПлана.КодНаправленияСпециальности + " " + ПроектПлана.НазваниеНаправленияСпециальности;
	ОблШапка.Параметры.ФормаОбучения			 = НРег(Строка(ПроектПлана.ФормаОбучения));
	ОблШапка.Параметры.ГодНабора				 = ПроектПлана.ГодНабора.Наименование;
	ОблШапка.Параметры.Квалификация 	 		 = ПроектПлана.Квалификация.Наименование;
	ОблШапка.Параметры.СрокОбучения				 = ПроектПлана.СрокОбучения;
	ТабДок.Вывести(ОблШапка);

	// ---------------Заполняем График учебного процесса--------------
	ТабДок.Вывести(ОблНеделиШапка);
	ТЗГрафикУП = ПроектПлана.ГрафикОбразовательногоПроцесса.Выгрузить();
	ОблНеделиВсего.Параметры.ТеорОбучение	= 0;
	ОблНеделиВсего.Параметры.ЭкзСессия		= 0;
	ОблНеделиВсего.Параметры.УчПрактики	    = 0;
	ОблНеделиВсего.Параметры.ПроизвПрактики = 0;
	ОблНеделиВсего.Параметры.Диплом 		= 0;
	ОблНеделиВсего.Параметры.ИтогАттестация = 0;
	ОблНеделиВсего.Параметры.Каникулы 		= 0;
	ОблНеделиВсего.Параметры.Всего 			= 0;
	Для Каждого КурсГрафика Из ТЗГрафикУП Цикл
		ИтогиКурса = ПодсчетИтоговПоКурсуВГрафике(КурсГрафика);
		ОблНеделиТЧ.Параметры.Заполнить(КурсГрафика);
		ОблНеделиТЧ.Параметры.Заполнить(ИтогиКурса);
		ТабДок.Вывести(ОблНеделиТЧ);
		ОблНеделиВсего.Параметры.ТеорОбучение	= ОблНеделиВсего.Параметры.ТеорОбучение + ИтогиКурса.ТеорОбучение;
		ОблНеделиВсего.Параметры.ЭкзСессия		= ОблНеделиВсего.Параметры.ЭкзСессия + ИтогиКурса.ЭкзСессия;
		ОблНеделиВсего.Параметры.УчПрактики	    = ОблНеделиВсего.Параметры.УчПрактики + ИтогиКурса.УчПрактики;
		ОблНеделиВсего.Параметры.ПроизвПрактики = ОблНеделиВсего.Параметры.ПроизвПрактики + ИтогиКурса.ПроизвПрактики;
		ОблНеделиВсего.Параметры.Диплом 		= ОблНеделиВсего.Параметры.Диплом + ИтогиКурса.Диплом;
		ОблНеделиВсего.Параметры.ИтогАттестация = ОблНеделиВсего.Параметры.ИтогАттестация + ИтогиКурса.ИтогАттестация;
		ОблНеделиВсего.Параметры.Каникулы 		= ОблНеделиВсего.Параметры.Каникулы + ИтогиКурса.Каникулы;
		ОблНеделиВсего.Параметры.Всего 			= ОблНеделиВсего.Параметры.Всего + ИтогиКурса.Всего;
	КонецЦикла;
	ТабДок.Вывести(ОблНеделиВсего);
	ТабДок.Вывести(ОблОбозначения);
	
	// ---------------- Заполняем Шапку Данных Плана (здесь недели как параметры) ----------------------
	ТЗЧислоНедель = ПроектПлана.ЧислоНедельПоСеместрам.Выгрузить();
	Для Каждого Сем Из ТЗЧислоНедель Цикл
		ОблПланШапка.Параметры["Недель" + Сем.Семестр.Наименование] = "" + Сем.ЧислоНедель + " недель";
	КонецЦикла;
	ТабДок.Вывести(ОблПланШапка);
	ТабДок.ПовторятьПриПечатиСтроки = ОблПланШапка;
	
	// ---------------- Заполняем Дисциплины и Модули ----------------------	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПроектыУПДисциплины.Ссылка,
	               |	ПроектыУПДисциплины.Дисциплина КАК ДисциплинаTemp,
	               |	ПроектыУПДисциплины.ДисциплинаВыб,
	               |	ПроектыУПДисциплины.Компонента КАК Компонента,
	               |	ПроектыУПДисциплины.ЧислоНедель,
	               |	ПроектыУПДисциплины.Модуль КАК Модуль,
	               |	ПроектыУПДисциплины.Семестр,
	               |	ПроектыУПДисциплины.Кафедра КАК КафедраTemp,
	               |	ПроектыУПДисциплины.КафедраВыб,
	               |	ПроектыУПДисциплины.Экзамен,
	               |	ПроектыУПДисциплины.Зачет,
	               |	ПроектыУПДисциплины.ТиповойРасчет,
	               |	ПроектыУПДисциплины.КурсовоеПроектирование,
	               |	ПроектыУПДисциплины.КурсоваяРабота,
	               |	ПроектыУПДисциплины.Семинарские КАК Семинарские,
	               |	ПроектыУПДисциплины.ВсегоЧасов КАК ВсегоЧасов,
	               |	ПроектыУПДисциплины.АудиторныхЧасов КАК АудиторныхЧасов,
	               |	ПроектыУПДисциплины.ВсегоЗачетныхЕдиниц КАК ВсегоЗачетныхЕдиниц,
	               |	ПроектыУПДисциплины.Лекции КАК Лекции,
	               |	ПроектыУПДисциплины.Лабораторные КАК Лабораторные,
	               |	ПроектыУПДисциплины.Практические КАК Практические,
	               |	ПроектыУПДисциплины.ВыбираемыеДисциплины КАК Дисциплина,
	               |	ПроектыУПДисциплины.ВыбираемыеКафедры КАК Кафедра,
	               |	ПроектыУПДисциплины.НомерСтроки КАК НомерСтроки,
				   |	ПроектыУПДисциплины.СеместрыСтрока Как СеместрыСтрока
	               |ИЗ
	               |	Документ.ПроектыУП.Дисциплины КАК ПроектыУПДисциплины
	               |ГДЕ
	               |	ПроектыУПДисциплины.Ссылка = &План
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	НомерСтроки";
	Запрос.УстановитьПараметр("План", ПроектПлана.Ссылка);
	ТЗ = Запрос.Выполнить().Выгрузить();	
		
	Компоненты = Новый Массив;
	Компоненты.Добавить(Справочники.Компоненты.НайтиПоНаименованию("ГК", Истина));
	Компоненты.Добавить(Справочники.Компоненты.НайтиПоНаименованию("УВО", Истина));
	Компоненты.Добавить(Справочники.Компоненты.НайтиПоНаименованию("ФД", Истина));
	//Компоненты.Добавить(Справочники.Компоненты.НайтиПоНаименованию("ДВО", Истина));

	НомКомп = 0;
	Для Каждого Компонента Из Компоненты Цикл
		ОблКомпонент = Макет.ПолучитьОбласть("Компонента");
		НомКомп = НомКомп + 1;
		НомМод = 0;
		ДисцМодули = ТЗ.Скопировать(Новый Структура("Компонента", Компонента));
		
		// Формируем ТЗ модулей и отдельных дисциплин (СТЗ: Модуль, Дисциплина)
		Модули = Новый ТаблицаЗначений;
		Модули.Колонки.Добавить("Модуль", Новый ОписаниеТипов("СправочникСсылка.Модули"));
		Модули.Колонки.Добавить("Дисциплина");
		Для Каждого СТЗ Из ДисцМодули Цикл
			Если СТЗ.Модуль.Пустая() Тогда	// Дисциплина без модуля, которая должна отобразиться как модуль...
				Если Модули.Найти(СТЗ.Дисциплина, "Дисциплина") = Неопределено Тогда
					НовыйМодуль = Модули.Добавить();
					НовыйМодуль.Дисциплина = СТЗ.Дисциплина;
				КонецЕсли;
				Продолжить;
			КонецЕсли;
			Если Модули.Найти(СТЗ.Модуль, "Модуль") = Неопределено Тогда
				НовыйМодуль = Модули.Добавить();
				НовыйМодуль.Модуль = СТЗ.Модуль;
			КонецЕсли;
		КонецЦикла;
		
		// Выводим данные по компоненте
		ОблКомпонент.Параметры.Компонента = Компонента.ПолноеНазвание;
		ОблКомпонент.Параметры.ЧасовВсего = ДисцМодули.Итог("ВсегоЧасов");
		ОблКомпонент.Параметры.ЧасовАуд	  = ДисцМодули.Итог("АудиторныхЧасов");
		ОблКомпонент.Параметры.ЛК		  = ДисцМодули.Итог("Лекции");
		ОблКомпонент.Параметры.ЛБ		  = ДисцМодули.Итог("Лабораторные");
		ОблКомпонент.Параметры.ПЗ		  = ДисцМодули.Итог("Практические");
		ОблКомпонент.Параметры.СЗ		  = ДисцМодули.Итог("Семинарские");
		ОблКомпонент.Параметры.ВсегоЗачЕд = ДисцМодули.Итог("ВсегоЗачетныхЕдиниц");
		ОблКомпонент.Параметры.Номер	  = НомКомп;
		
		ТемпТЗ = ДисцМодули.Скопировать();
		ТемпТЗ.Свернуть("Семестр", "ВсегоЧасов, АудиторныхЧасов, ВсегоЗачетныхЕдиниц");
		Для Каждого КомпПоСем Из ТемпТЗ Цикл
			ОблКомпонент.Параметры["ЧасовВсего"	+ КомпПоСем.Семестр] = КомпПоСем.ВсегоЧасов;
			ОблКомпонент.Параметры["ЧасовАуд"	+ КомпПоСем.Семестр] = КомпПоСем.АудиторныхЧасов;
			ОблКомпонент.Параметры["ЗачЕд"		+ КомпПоСем.Семестр] = КомпПоСем.ВсегоЗачетныхЕдиниц;
		КонецЦикла;
		ТабДок.Вывести(ОблКомпонент);
		
		// Выводим наименование модулей
		Для Каждого Модуль Из Модули Цикл
			НомМод = НомМод + 1;
			НомДисц = 0;
			Если Модуль.Модуль.Пустая() Тогда
				Дисциплины = ДисцМодули.Скопировать(Новый Структура("Дисциплина", Модуль.Дисциплина));
			Иначе
				ОблМодуль.Параметры.Модуль = Модуль.Модуль.ПолноеНазвание;
				ОблМодуль.Параметры.Номер = "" + НомКомп + "." + НомМод;
				ТабДок.Вывести(ОблМодуль);
				Дисциплины = ДисцМодули.Скопировать(Новый Структура("Модуль", Модуль.Модуль));
			КонецЕсли;			
			// Выводим дисциплины в модуле
			ОбощнениеДисциплин = Дисциплины.Скопировать();
			ОбощнениеДисциплин.Свернуть("Дисциплина, Кафедра", "ВсегоЧасов, АудиторныхЧасов, ВсегоЗачетныхЕдиниц, Лекции, Лабораторные, Практические, Семинарские");
			Для Каждого ОбщДисц Из ОбощнениеДисциплин Цикл
				НомДисц = НомДисц + 1;
				ОдинаковыеДисц = Дисциплины.НайтиСтроки(Новый Структура("Дисциплина", ОбщДисц.Дисциплина)); // Структура с кафедрой!!!
				Если ОдинаковыеДисц.Количество() > 1 Тогда
					ОблМодуль.Параметры.Модуль = ОбщДисц.Дисциплина;
					ОблМодуль.Параметры.Кафедра = ОбщДисц.Кафедра;
					ОблМодуль.Параметры.ЧасовВсего = ОбщДисц.ВсегоЧасов;
					ОблМодуль.Параметры.ЧасовАуд = ОбщДисц.АудиторныхЧасов;
					ОблМодуль.Параметры.ВсегоЗачЕд = ОбщДисц.ВсегоЗачетныхЕдиниц;
					ОблМодуль.Параметры.ЛК = ОбщДисц.Лекции;
					ОблМодуль.Параметры.ЛБ = ОбщДисц.Лабораторные;
					ОблМодуль.Параметры.ПЗ = ОбщДисц.Практические;
					ОблМодуль.Параметры.СЗ = ОбщДисц.Семинарские;
					ОблМодуль.Параметры.Номер = "" + НомКомп + "." + НомМод;
					ТабДок.Вывести(ОблМодуль);
					ОблМодуль = Макет.ПолучитьОбласть("Модуль"); // Чистка!!!
				КонецЕсли;

				Для Каждого Дисциплина Из ОдинаковыеДисц Цикл
					ОблДисциплина.Параметры.Дисциплина		= Дисциплина.Дисциплина;
					ОблДисциплина.Параметры.Кафедра 		= Дисциплина.Кафедра;
					ОблДисциплина.Параметры.Экз 			= ?(Дисциплина.Экзамен <> 0, Дисциплина.Семестр, 0);
					ОблДисциплина.Параметры.Зач 			= ?(Дисциплина.Зачет <> 0, Дисциплина.Семестр, 0);
					ОблДисциплина.Параметры.ТР 				= ?(Дисциплина.ТиповойРасчет <> 0, Дисциплина.Семестр, 0);
					ОблДисциплина.Параметры.ВсегоЧасов 		= Дисциплина.ВсегоЧасов;
					ОблДисциплина.Параметры.ВсегоАудиторных = Дисциплина.АудиторныхЧасов;
					ОблДисциплина.Параметры.ВсегоЗачЕд 		= Дисциплина.ВсегоЗачетныхЕдиниц;
					ОблДисциплина.Параметры.ЛК 				= Дисциплина.Лекции;
					ОблДисциплина.Параметры.ЛБ 				= Дисциплина.Лабораторные;
					ОблДисциплина.Параметры.ПЗ 				= Дисциплина.Практические;
					ОблДисциплина.Параметры.СЗ 				= Дисциплина.Семинарские;
					ОблДисциплина.Параметры.Номер = "" + НомКомп + "." + НомМод + "." + НомДисц;
					Сем = Дисциплина.Семестр;
					ОблДисциплина.Параметры["ЧасовВсего" + Сем] = Дисциплина.ВсегоЧасов;
					ОблДисциплина.Параметры["ЧасовАуд" 	 + Сем] = Дисциплина.АудиторныхЧасов;
					ОблДисциплина.Параметры["ЗачЕд" 	 + Сем] = Дисциплина.ВсегоЗачетныхЕдиниц;
					ТабДок.Вывести(ОблДисциплина);
					// Очищаем область, тк мы можем не перезаписать значения в колонках n-го семестра.
					ОблДисциплина.Параметры["ЧасовВсего" + Сем] = Неопределено;
					ОблДисциплина.Параметры["ЧасовАуд" 	 + Сем] = Неопределено;
					ОблДисциплина.Параметры["ЗачЕд" 	 + Сем] = Неопределено;
				КонецЦикла;
			КонецЦикла;		
		КонецЦикла;		
	КонецЦикла;
	
	ВыводДВО(ТЗ.Скопировать(Новый Структура("Компонента", Справочники.Компоненты.НайтиПоНаименованию("ДВО", Истина))), ТабДок, ПроектПлана);
	
	// ---------------- Заполняем Подвал плана ----------------------
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПроектыУПДисциплины.Семестр,
	               |	СУММА(ПроектыУПДисциплины.Экзамен) КАК Экзамен,
	               |	СУММА(ПроектыУПДисциплины.Зачет) КАК Зачет,
	               |	СУММА(ПроектыУПДисциплины.КурсовоеПроектирование) КАК КурсовоеПроектирование,
	               |	СУММА(ПроектыУПДисциплины.КурсоваяРабота) КАК КурсоваяРабота,
	               |	СУММА(ПроектыУПДисциплины.Семинарские) КАК Семинарские,
	               |	СУММА(ПроектыУПДисциплины.ВсегоЧасов) КАК ВсегоЧасов,
	               |	СУММА(ПроектыУПДисциплины.АудиторныхЧасов) КАК АудиторныхЧасов,
	               |	СУММА(ПроектыУПДисциплины.ВсегоЗачетныхЕдиниц) КАК ВсегоЗачетныхЕдиниц,
	               |	СУММА(ПроектыУПДисциплины.Лекции) КАК Лекции,
	               |	СУММА(ПроектыУПДисциплины.Лабораторные) КАК Лабораторные,
	               |	СУММА(ПроектыУПДисциплины.Практические) КАК Практические
	               |ИЗ
	               |	Документ.ПроектыУП.Дисциплины КАК ПроектыУПДисциплины
	               |ГДЕ
	               |	ПроектыУПДисциплины.Ссылка = &План
	               |	И (ПроектыУПДисциплины.Компонента.Наименование = ""ГК""
	               |			ИЛИ ПроектыУПДисциплины.Компонента.Наименование = ""УВО"")
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ПроектыУПДисциплины.Семестр";
	Запрос.УстановитьПараметр("План", ПроектПлана.Ссылка);
	Итоги = Запрос.Выполнить().Выгрузить();
	
	Для Каждого Итог Из Итоги Цикл
		ОблПланПодвал.Параметры["ЧасовВсего" + Итог.Семестр] = Итог.ВсегоЧасов;
		ОблПланПодвал.Параметры["ЧасовАуд" 	 + Итог.Семестр] = Итог.АудиторныхЧасов;
		ОблПланПодвал.Параметры["ЗачЕд" 	 + Итог.Семестр] = Итог.ВсегоЗачетныхЕдиниц;
		ОблПланПодвал.Параметры["ВсегоПроектов" + Итог.Семестр] = Итог.КурсовоеПроектирование;
		ОблПланПодвал.Параметры["ВсегоКР" 	 	+ Итог.Семестр] = Итог.КурсоваяРабота;
		ОблПланПодвал.Параметры["ВсегоЭкз" 	 	+ Итог.Семестр] = Итог.Экзамен;
		ОблПланПодвал.Параметры["ВсегоЗач" 	 	+ Итог.Семестр] = Итог.Зачет;
	КонецЦикла;
	ОблПланПодвал.Параметры.ВсегоЧасов = Итоги.Итог("ВсегоЧасов");
	ОблПланПодвал.Параметры.ВсегоАудиторных = Итоги.Итог("АудиторныхЧасов");
	ОблПланПодвал.Параметры.ЛК = Итоги.Итог("Лекции");
	ОблПланПодвал.Параметры.ЛБ = Итоги.Итог("Лабораторные");
	ОблПланПодвал.Параметры.ПЗ = Итоги.Итог("Практические");
	ОблПланПодвал.Параметры.СЗ = Итоги.Итог("Семинарские");
	ОблПланПодвал.Параметры.ВсегоЗачЕд 		 = Итоги.Итог("ВсегоЗачетныхЕдиниц");
	ОблПланПодвал.Параметры["ВсегоПроектов"] = Итоги.Итог("КурсовоеПроектирование");
	ОблПланПодвал.Параметры["ВсегоКР"] 		 = Итоги.Итог("КурсоваяРабота");
	ОблПланПодвал.Параметры["ВсегоЭкз"] 	 = Итоги.Итог("Экзамен");
	ОблПланПодвал.Параметры["ВсегоЗач"] 	 = Итоги.Итог("Зачет");
	ТабДок.Вывести(ОблПланПодвал);
	
	// ---------------- Заполняем Практики ----------------------
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПроектыУППрактикиДПГЭК.Разделы КАК Разделы,
	               |	ПроектыУППрактикиДПГЭК.Дисциплины,
	               |	ПроектыУППрактикиДПГЭК.Семестр КАК Семестр,
	               |	ПроектыУППрактикиДПГЭК.ЧислоНедель,
	               |	ПроектыУППрактикиДПГЭК.ЗачетныеЕдиницы
	               |ИЗ
	               |	Документ.ПроектыУП.ПрактикиДПГЭК КАК ПроектыУППрактикиДПГЭК
	               |ГДЕ
	               |	ПроектыУППрактикиДПГЭК.Ссылка = &План
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Семестр";
				
	Запрос.УстановитьПараметр("План", ПроектПлана.Ссылка);
	Практики = Запрос.Выполнить().Выгрузить();	
	
	Для Каждого Практика Из Практики Цикл
		Если СтрНайти(Практика.Разделы, "IV.") > 0 Тогда
			ОблПрактики.Параметры.Практика1Раздел = ФорматПрактики(Практика.Дисциплины);
			ОблПрактики.Параметры.Сем1Раздел      = Практика.Семестр;
			ОблПрактики.Параметры.Недель1Раздел   = Практика.ЧислоНедель;
			ОблПрактики.Параметры.Зачед1Раздел    = Практика.ЗачетныеЕдиницы;
		ИначеЕсли СтрНайти(Практика.Разделы, "V.") > 0 Тогда
			Если ОблПрактики.Параметры.Сем2Раздел = Неопределено Тогда
				ОблПрактики.Параметры.Практика2Раздел = ФорматПрактики(Практика.Дисциплины);
				ОблПрактики.Параметры.Сем2Раздел      = Практика.Семестр;
				ОблПрактики.Параметры.Недель2Раздел   = Практика.ЧислоНедель;
				ОблПрактики.Параметры.Зачед2Раздел    = Практика.ЗачетныеЕдиницы;
			Иначе
				ОблПрактики.Параметры.Практика3Раздел = ФорматПрактики(Практика.Дисциплины);
				ОблПрактики.Параметры.Сем3Раздел      = Практика.Семестр;
				ОблПрактики.Параметры.Недель3Раздел   = Практика.ЧислоНедель;
				ОблПрактики.Параметры.Зачед3Раздел    = Практика.ЗачетныеЕдиницы;
			КонецЕсли;
		ИначеЕсли СтрНайти(Практика.Разделы, "VI.") > 0 Тогда
			ОблПрактики.Параметры.Сем4Раздел      = Практика.Семестр;
			ОблПрактики.Параметры.Недель4Раздел   = Практика.ЧислоНедель;
			ОблПрактики.Параметры.Зачед4Раздел    = Практика.ЗачетныеЕдиницы;
		КонецЕсли;
	КонецЦикла;
	ТабДок.Вывести(ОблПрактики);

	// ---------------- Заполняем Компетенций ----------------------
	ТабДок.Вывести(ОблКомпетенцииШапка);
	
	// ---------------- Заполняем Примечания ----------------------
	ТабДок.Вывести(ОблПримечания);				// Пустая строка
	ОблПримечания.Параметры.Примечание = "Разработан на основе типового учебного плана.";
	ТабДок.Вывести(ОблПримечания);
	ОблПримечания.Параметры.Примечание = "1. Обучение ведётся...";
	ТабДок.Вывести(ОблПримечания);
	ОблПримечания.Параметры.Примечание = "2. Занятия проводятся на базе филиала кафедр...";
	ТабДок.Вывести(ОблПримечания);
	ОблПримечания.Параметры.Примечание = "*. Допускается совмещение учебной практики...";
	ТабДок.Вывести(ОблПримечания);
	ОблПримечания.Параметры.Примечание = "";	// Пустая строка
	ТабДок.Вывести(ОблПримечания);
	
	// ---------------- Заполняем Подвал ----------------------
	ОблПодвал.Параметры.Факультет = ПроектПлана.Факультет;
	ОблПодвал.Параметры.Кафедра = НРег(ПроектПлана.ВыпускающаяКафедра.Название);
	ОблПодвал.Параметры.ФИОЗавКаф = ФорматФИО(ПроектПлана.ВыпускающаяКафедра.Заведующий.Наименование);
	ОблПодвал.Параметры.УчетныйНомерПлана = ПроектПлана.РегистрационныйНомерПлана;
	ОблПодвал.Параметры.ФИОНормКонтр = ФорматФИО(ПроектПлана.ЭкспертНормоконтролер);
	
	ОблПодвал.Параметры.ФИОПроректора = "В. А. Рыбак";
	ОблПодвал.Параметры.ФИОДекана = "С. В. Дробот";
	ОблПодвал.Параметры.ФИОУпр = "С. А. Волчек";
	ТабДок.Вывести(ОблПодвал);
	Возврат ОбъединениеПолейТД(ТабДок);
КонецФункции	

&НаСервереБезКонтекста
Процедура ВыводДВО(ДВО, ТабДок, ПроектПлана)
	Макет 	  = Документы.ПроектыУП.ПолучитьМакет("Макет");
	ОблДисц   = Макет.ПолучитьОбласть("ДисцФормат");
	ОблМодуль = Макет.ПолучитьОбласть("МодФормат");
	
	// Выводим данные по компоненте
	ОблМодуль.Параметры.Модуль	   = Справочники.Компоненты.НайтиПоНаименованию("ДВО", Истина).ПолноеНазвание;
	ОблМодуль.Параметры.ЧасовВсего = ДВО.Итог("ВсегоЧасов");
	ОблМодуль.Параметры.ЧасовАуд   = ДВО.Итог("АудиторныхЧасов");
	ОблМодуль.Параметры.ЛК		   = ДВО.Итог("Лекции");
	ОблМодуль.Параметры.ЛБ		   = ДВО.Итог("Лабораторные");
	ОблМодуль.Параметры.ПЗ		   = ДВО.Итог("Практические");
	ОблМодуль.Параметры.СЗ		   = ДВО.Итог("Семинарские");
	ОблМодуль.Параметры.ВсегоЗачЕд = ДВО.Итог("ВсегоЗачетныхЕдиниц");
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПроектыУПДополнительныеВидыОбучения.Ссылка,
	               |	ПроектыУПДополнительныеВидыОбучения.Дисциплина.Наименование Как Дисциплина,
	               |	ПроектыУПДополнительныеВидыОбучения.Кафедра,
	               |	ПроектыУПДополнительныеВидыОбучения.Семестр,
	               |	ПроектыУПДополнительныеВидыОбучения.Часы,
	               |	ПроектыУПДополнительныеВидыОбучения.ВидКонтроля
	               |ИЗ
	               |	Документ.ПроектыУП.ДополнительныеВидыОбучения КАК ПроектыУПДополнительныеВидыОбучения
	               |ГДЕ
	               |	ПроектыУПДополнительныеВидыОбучения.Ссылка = &План";
	Запрос.УстановитьПараметр("План", ПроектПлана);
	Дисциплины = Запрос.Выполнить().Выгрузить();
	Итоги = Дисциплины.Скопировать();
	Итоги.Свернуть("Семестр", "Часы");
	Для Каждого ЧасыВСеме Из Итоги Цикл
		ОблМодуль.Параметры["ЧасовВсего" + ЧасыВСеме.Семестр] = ЧасыВСеме.Часы;
		ОблМодуль.Параметры["ЧасовАуд"	 + ЧасыВСеме.Семестр] = ЧасыВСеме.Часы;
	КонецЦикла;
	ТабДок.Вывести(ОблМодуль);
	
	// Заполняем дисциплины
	Для Каждого Дисциплина Из ДВО Цикл
		ОблДисц.Параметры.Дисциплина	  = Дисциплина.Дисциплина;
		ОблДисц.Параметры.Кафедра 		  = Дисциплина.Кафедра;
		ОблДисц.Параметры.Экз 			  = ?(Дисциплина.Экзамен <> 0, Дисциплина.СеместрыСтрока, 0);
		ОблДисц.Параметры.Зач 			  = ?(Дисциплина.Зачет <> 0, Дисциплина.СеместрыСтрока, 0);
		ОблДисц.Параметры.ТР 			  = ?(Дисциплина.ТиповойРасчет <> 0, Дисциплина.СеместрыСтрока, 0);
		ОблДисц.Параметры.ВсегоЧасов 	  = Дисциплина.ВсегоЧасов;
		ОблДисц.Параметры.ВсегоАудиторных = Дисциплина.АудиторныхЧасов;
		ОблДисц.Параметры.ВсегоЗачЕд 	  = Дисциплина.ВсегоЗачетныхЕдиниц;
		ОблДисц.Параметры.ЛК 			  = Дисциплина.Лекции;
		ОблДисц.Параметры.ЛБ 			  = Дисциплина.Лабораторные;
		ОблДисц.Параметры.ПЗ 			  = Дисциплина.Практические;
		ОблДисц.Параметры.СЗ 			  = Дисциплина.Семинарские;
		
		ПоСеместрам = Дисциплины.Скопировать(Новый Структура("Дисциплина", Дисциплина.Дисциплина));
		Для Каждого ДисцВСеместре Из ПоСеместрам Цикл
			ОблДисц.Параметры["ЧасовВсего" + ДисцВСеместре.Семестр] = ДисцВСеместре.Часы;
			ОблДисц.Параметры["ЧасовАуд"   + ДисцВСеместре.Семестр] = ДисцВСеместре.Часы;	
		КонецЦикла;
		ТабДок.Вывести(ОблДисц);
		// Очищаем область, тк мы можем не перезаписать значения в колонках n-го семестра.
		Для Каждого ДисцВСеместре Из ПоСеместрам Цикл
			ОблДисц.Параметры["ЧасовВсего" + ДисцВСеместре.Семестр] = Неопределено;
			ОблДисц.Параметры["ЧасовАуд"   + ДисцВСеместре.Семестр] = Неопределено;	
		КонецЦикла;
	КонецЦикла;				
КонецПроцедуры

&НаСервереБезКонтекста
Функция ФорматПрактики(Практика)
	ЛевПоз = СтрНайти(Практика, "(", НаправлениеПоиска.СКонца);
	Если ЛевПоз > 0 Тогда
		ПравПоз = СтрНайти(Практика, ")", НаправлениеПоиска.СКонца);
		ПравПоз = ?(ПравПоз = 0, СтрДлина(Практика), ПравПоз - 1);
		Возврат Сред(Практика, ЛевПоз + 1, ПравПоз - ЛевПоз);
	КонецЕсли;
	Возврат Практика;
КонецФункции

&НаСервереБезКонтекста
Функция ФорматФИО(ФИО)
	Если Не ЗначениеЗаполнено(ФИО) Тогда
		Возврат "";
	КонецЕсли;
	Мс = СтрРазделить(ФИО, " ", Ложь);
	Если Мс.Количество() > 2 Тогда
		Возврат Лев(Мс[1], 1) + ". " + Лев(Мс[2], 1) + ". " + Мс[0];
	ИначеЕсли Мс.Количество() = 2 Тогда
		Возврат Лев(Мс[1], 1) + ". " + Мс[0];
	ИначеЕсли Мс.Количество() = 1 Тогда
		Возврат Мс[0];
	КонецЕсли;
	Возврат "";
КонецФункции

&НаСервереБезКонтекста
Функция ПодсчетИтоговПоКурсуВГрафике(СтрГраф)
	ДанныеПоКурсу = Новый Структура;
	ТеорОбучение = 0; ЭкзСессия = 0; УчПрактики = 0; ПроизвПрактики = 0; Диплом = 0; ИтогАттестация = 0; Каникулы = 0; Всего = 52;
	ПоследняяНеделя = 0;
	Для Инд = 2 По 53 Цикл	// СтрГраф[0] = НомерСтроки, СтрГраф[1] = Курс
		Если СтрГраф[Инд].Пустая() Тогда
			ТеорОбучение = ТеорОбучение + 1;
		ИначеЕсли СтрГраф[Инд].Наименование = ":" Тогда
			ЭкзСессия = ЭкзСессия + 1; 	
		ИначеЕсли СтрГраф[Инд].Наименование = "=" Тогда
			Каникулы = Каникулы + 1;
		ИначеЕсли СтрГраф[Инд].Наименование = "О" Тогда
			УчПрактики = УчПрактики + 1;
			Всего = Всего - 1;
		ИначеЕсли СтрГраф[Инд].Наименование = "Хт" Или СтрГраф[Инд].Наименование = "Хд" Тогда
			ПроизвПрактики = ПроизвПрактики + 1;
		ИначеЕсли СтрГраф[Инд].Наименование = "/" Тогда
			Диплом = Диплом + 1;
		ИначеЕсли СтрГраф[Инд].Наименование = "//" Тогда
			ИтогАттестация = ИтогАттестация + 1;
			ПоследняяНеделя = Инд - 1; // -1 тк в ТЗ есть колонка НомерСтроки
		КонецЕсли;
	КонецЦикла;
	ДанныеПоКурсу.Вставить("ТеорОбучение",	 ?(ПоследняяНеделя = 0, ТеорОбучение, ТеорОбучение - (Всего - ПоследняяНеделя))); // избавляемся от недель после защиты диплома
	ДанныеПоКурсу.Вставить("ЭкзСессия",		 ЭкзСессия);
	ДанныеПоКурсу.Вставить("УчПрактики",	 УчПрактики);
	ДанныеПоКурсу.Вставить("ПроизвПрактики", ПроизвПрактики);
	ДанныеПоКурсу.Вставить("Диплом",		 Диплом);
	ДанныеПоКурсу.Вставить("ИтогАттестация", ИтогАттестация);
	ДанныеПоКурсу.Вставить("Каникулы",		 Каникулы);
	ДанныеПоКурсу.Вставить("Всего",			 ?(ПоследняяНеделя = 0, Всего, ПоследняяНеделя));
	Возврат ДанныеПоКурсу;
КонецФункции

&НаСервереБезКонтекста
Функция ОбъединениеПолейТД(ТабДок)
	// Название дисциплины/модуля = 2..15 колонки; Кафедра = 16..18; Код компетенции = 60..61
	// Начало плана образовательного процесса = +- 37 строка. Но это не точно))))
	// Потом перевести код на №п/п
	ПредТекст = "";	
	НачалоОбъединения = ТабДок.Области.ПланШапка.Низ + 1;
	ГраницаОбрПроц = ТабДок.Области.ПланПодвал.Верх - 1;
	Для Инд = НачалоОбъединения По ГраницаОбрПроц Цикл
		Текст = ТабДок.Область(Инд, 2, Инд, 15).Текст;				
		Если Текст = ПредТекст И Текст <> "" Тогда
			ТабДок.Область(НачалоОбъединения, 1, Инд, 1).Объединить();			// № п/п
			ТабДок.Область(НачалоОбъединения, 2, Инд, 15).Объединить();   		// Модуль/дисциплина
			ТабДок.Область(НачалоОбъединения, 16, Инд, 18).Объединить();		// Кафедра
			ТабДок.Область(НачалоОбъединения, 60, Инд, 61).Объединить();		// Компетенции
		Иначе
			Если (Текст <> "" И ПредТекст <> "") И Найти(Текст, ПредТекст) > 0 Тогда
				ТабДок.Область(НачалоОбъединения, 16, Инд, 18).Объединить();	// Кафедра
			Иначе
				ПредТекст = Текст;
				НачалоОбъединения = Инд;
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла;
	СформироватьТЗНедель();
	СформироватьТЗНедель(Ложь);
	Возврат ТабДок;
КонецФункции
